webpackHotUpdate_N_E("pages/index",{

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Home; });\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-select */ \"./node_modules/react-select/dist/react-select.browser.esm.js\");\n/* harmony import */ var _components_CodeBlock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/CodeBlock */ \"./components/CodeBlock.tsx\");\n/* harmony import */ var _marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @marcelovicentegc/i18n-iso-languages */ \"./node_modules/@marcelovicentegc/i18n-iso-languages/dist/index.js\");\n/* harmony import */ var _marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-toastify */ \"./node_modules/react-toastify/dist/react-toastify.esm.js\");\n/* harmony import */ var _components_Card__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/Card */ \"./components/Card.tsx\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-toastify/dist/ReactToastify.css */ \"./node_modules/react-toastify/dist/ReactToastify.css\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _components_Input__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/Input */ \"./components/Input.tsx\");\nvar _jsxFileName = \"/home/marcelo/Documents/i18n-language-codes/demo/pages/index.tsx\",\n    _s = $RefreshSig$();\n\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\n\n\n\n\n\n\n\n\n\n\nvar configure = function configure(options) {\n  Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"configure\"])(options);\n};\n\nvar defaultLookupKey = \"IETFLanguageTag\";\nvar defaultLocales = [\"pt-BR\", \"en-US\", \"zh-CN\", \"es-MX\", \"hi-IN\"];\nvar localesConfigPlaceholder = [{\n  localesSubset: {\n    lookupKey: defaultLookupKey,\n    locales: defaultLocales\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO31661Alpha2\",\n    locales: [\"PT\", \"US\", \"CH\", \"MX\", \"IN\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO31661Alpha3\",\n    locales: [\"BRA\", \"USA\", \"CHN\", \"MEX\", \"IND\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO6391\",\n    locales: [\"pt\", \"en\", \"zh\", \"es\", \"hi\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO6392\",\n    locales: [\"por\", \"eng\", \"zho\", \"spa\", \"hin\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"officialLanguage\",\n    locales: [\"Portuguese\", \"English\", \"Chinese\", \"Spanish\", \"Hindi\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"nativeOfficialLanguage\",\n    locales: [\"Português\", \"English\", \"中文\", \"Español\", \"हिन्दी\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"region\",\n    locales: [\"Brazil\", \"United Kingdom\", \"China\", \"Mexico\", \"India\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"nativeRegion\",\n    locales: [\"Brasil\", \"United Kingdom\", \"中华人民共和国\", \"México\", \"भारत गणराज्य\"]\n  }\n}];\nvar defaultMultipleLocalesByLanguageTagQuery = [\"en-US\", \"es-MX\"];\nvar defaultSingleLocaleByLanguageTagQuery = \"hi-IN\";\nconfigure({\n  localesSubset: {\n    lookupKey: defaultLookupKey,\n    locales: defaultLocales\n  }\n});\nfunction Home() {\n  _s();\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(\"IETFLanguageTag\"),\n      demoLookupKey = _useState[0],\n      setDemoLookupKey = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultLocales),\n      demoLocales = _useState2[0],\n      setDemoLocales = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displayGetLocalesResult = _useState3[0],\n      setDisplayGetLocalesResult = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displaySingleLocaleByLanguageTagResult = _useState4[0],\n      setDisplaySingleLocaleByLanguageTagResult = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displayMultipleLocalesByLanguageTagResult = _useState5[0],\n      setDisplayMultipleLocalesByLanguageTagResult = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(localesConfigPlaceholder[0]),\n      demoLocalesPlaceholder = _useState6[0],\n      setDemoLocalesPlaceholder = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultMultipleLocalesByLanguageTagQuery),\n      multipleLocalesByLanguageTagQuery = _useState7[0],\n      setMultipleLocalesByLanguageTagQuery = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultSingleLocaleByLanguageTagQuery),\n      singleLocaleByLanguageTagQuery = _useState8[0],\n      setSingleLocaleByLanguageTagQuery = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(),\n      singleLocaleByLanguageTag = _useState9[0],\n      setSingleLocaleByLanguageTag = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n      multipleLocalesByLanguageTag = _useState10[0],\n      setMultipleLocalesByLanguageTag = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n      localesByGetLocales = _useState11[0],\n      setLocalesByGetLocales = _useState11[1];\n\n  var options = [{\n    value: \"IETFLanguageTag\",\n    label: \"IETF language tag\"\n  }, {\n    value: \"ISO31661Alpha2\",\n    label: \"ISO 3166-1 alpha-2\"\n  }, {\n    value: \"ISO31661Alpha3\",\n    label: \"ISO 3166-1 alpha-3\"\n  }, {\n    value: \"ISO6391\",\n    label: \"ISO 639-1\"\n  }, {\n    value: \"ISO6392\",\n    label: \"ISO 639-2\"\n  }, {\n    value: \"nativeOfficialLanguage\",\n    label: \"Native official language\"\n  }, {\n    value: \"nativeRegion\",\n    label: \"Native region\"\n  }, {\n    value: \"officialLanguage\",\n    label: \"Official language\"\n  }, {\n    value: \"region\",\n    label: \"Region\"\n  }];\n\n  var handleSelectOnChange = function handleSelectOnChange(value) {\n    setDemoLookupKey(value);\n    var config = localesConfigPlaceholder.find(function (conf) {\n      return conf.localesSubset.lookupKey === value;\n    });\n    setDemoLocales(config.localesSubset.locales);\n    setDemoLocalesPlaceholder(config);\n  };\n\n  var handleDemoLocales = function handleDemoLocales(value) {\n    return setDemoLocales(value);\n  };\n\n  var notifyOnConfigure = function notifyOnConfigure() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocales\"])();\n    Object(react_toastify__WEBPACK_IMPORTED_MODULE_6__[\"toast\"])(\"Configured locales subset with \".concat(locales.length, \" locale object\").concat(locales.length > 1 ? \"s\" : \"\", \"!\"), {\n      type: \"success\"\n    });\n  };\n\n  var handleOnConfigure = function handleOnConfigure() {\n    configure({\n      localesSubset: {\n        lookupKey: demoLookupKey,\n        locales: demoLocales\n      }\n    });\n    notifyOnConfigure();\n  };\n\n  var handleGetLocales = function handleGetLocales() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocales\"])();\n    setLocalesByGetLocales(locales);\n    setDisplayGetLocalesResult(true);\n  };\n\n  var handleSingleLocaleByLanguageTag = function handleSingleLocaleByLanguageTag() {\n    var locale = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocaleByIETFLanguageTag\"])(singleLocaleByLanguageTagQuery);\n    setSingleLocaleByLanguageTag(locale);\n    setDisplaySingleLocaleByLanguageTagResult(true);\n  };\n\n  var handleMultipleLocalesByLanguageTag = function handleMultipleLocalesByLanguageTag() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocaleByIETFLanguageTag\"])(multipleLocalesByLanguageTagQuery);\n    setMultipleLocalesByLanguageTag(locales);\n    setDisplayMultipleLocalesByLanguageTagResult(true);\n  };\n\n  var configureCode = \"\\nimport { configure } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconfigure({\\n  localesSubset: {\\n    lookupKey: '\".concat(demoLookupKey, \"',\\n    locales: [\").concat(demoLocales.map(function (locale) {\n    return \"'\".concat(locale, \"'\");\n  }), \"],\\n  },\\n})\\n\");\n  var getLocalesCode = \"\\nimport { getLocales } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locales = getLocales()\\n  \\nlocales.map((locale) => {\\n  return (\\n    <>\\n    <Separator />\\n    <p>Official language: {locale.officialLanguage}</p>\\n    <p>\\n      Native official language: {locale.nativeOfficialLanguage}\\n    </p>\\n    <p>Region: {locale.region}</p>\\n    <p>Native region: {locale.nativeRegion}</p>\\n    <p>ISO 639-1: {locale.ISO6391}</p>\\n    <p>ISO 3166-1 alpha-2: {locale.ISO31661Alpha2}</p>\\n    <p>ISO 3166-1 alpha-3: {locale.ISO31661Alpha3}</p>\\n    <p>IETFL language tag: {locale.IETFLanguageTag}</p>\\n    </>\\n  );\\n})\\n\\n\";\n  var singleLocaleByLanguageTagCode = \"\\nimport { getLocaleByIETFLanguageTag, Locale } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locale = getLocaleByIETFLanguageTag('\".concat(singleLocaleByLanguageTagQuery, \"') as Locale\\n                \");\n  var multipleLocalesByLanguageTagCode = \"\\nimport { getLocaleByIETFLanguageTag, Locale } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locales = getLocaleByIETFLanguageTag([\".concat(multipleLocalesByLanguageTagQuery.map(function (locale) {\n    return \"'\".concat(locale, \"'\");\n  }), \"]) as Locale[]\");\n  return __jsx(\"div\", {\n    className: \"jsx-2411788270\" + \" \" + \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }\n  }, __jsx(next_head__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, \"i18n-iso-languages\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-2411788270\" + \" \" + \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, \"i18n-iso-languages\"), __jsx(\"p\", {\n    className: \"jsx-2411788270\" + \" \" + \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, \"Get started by adding it to your project \"), __jsx(\"div\", {\n    className: \"jsx-2411788270\" + \" \" + \"codeBlockContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, __jsx(_components_CodeBlock__WEBPACK_IMPORTED_MODULE_4__[\"CodeBlock\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, \"yarn add @marcelovicentegc/i18n-iso-languages \", __jsx(\"br\", {\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 59\n    }\n  }), \"npm i @marcelovicentegc/i18n-iso-language\")), __jsx(\"div\", {\n    className: \"jsx-2411788270\" + \" \" + \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, __jsx(_components_Card__WEBPACK_IMPORTED_MODULE_7__[\"Card\"], {\n    title: \"configure\",\n    sections: [{\n      code: configureCode,\n      onClick: handleOnConfigure,\n      inputs: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }\n      }, \"lookup key\"), __jsx(react_select__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        options: options,\n        defaultValue: options[0],\n        onChange: function onChange(option) {\n          handleSelectOnChange(option.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }\n      }), __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }\n      }, \"locales\"), __jsx(_components_Input__WEBPACK_IMPORTED_MODULE_9__[\"Input\"], {\n        placeholder: demoLocalesPlaceholder.localesSubset.locales.join(\",\"),\n        value: demoLocales.join(),\n        onChange: function onChange(event) {\n          return handleDemoLocales(event.target.value.split(\",\"));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }\n      }))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }), __jsx(_components_Card__WEBPACK_IMPORTED_MODULE_7__[\"Card\"], {\n    title: \"getLocales\",\n    sections: [{\n      code: getLocalesCode,\n      onClick: handleGetLocales,\n      results: {\n        data: localesByGetLocales,\n        display: displayGetLocalesResult,\n        onToggle: function onToggle() {\n          return setDisplayGetLocalesResult(!displayGetLocalesResult);\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }), __jsx(_components_Card__WEBPACK_IMPORTED_MODULE_7__[\"Card\"], {\n    title: \"getLocaleByIETFLanguageTag\",\n    sections: [{\n      inputs: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }\n      }, \"You can get a single locale by language tag by providing a single language tag...\"), __jsx(_components_Input__WEBPACK_IMPORTED_MODULE_9__[\"Input\"], {\n        placeholder: defaultSingleLocaleByLanguageTagQuery,\n        value: singleLocaleByLanguageTagQuery,\n        onChange: function onChange(event) {\n          return setSingleLocaleByLanguageTagQuery(event.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }\n      })),\n      code: singleLocaleByLanguageTagCode,\n      onClick: handleSingleLocaleByLanguageTag,\n      results: {\n        data: singleLocaleByLanguageTag,\n        display: displaySingleLocaleByLanguageTagResult,\n        onToggle: function onToggle() {\n          return setDisplaySingleLocaleByLanguageTagResult(!displaySingleLocaleByLanguageTagResult);\n        }\n      }\n    }, {\n      inputs: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }\n      }, \"Or you can get multiple by providing multiple language tags!\"), __jsx(_components_Input__WEBPACK_IMPORTED_MODULE_9__[\"Input\"], {\n        placeholder: defaultMultipleLocalesByLanguageTagQuery.join(\",\"),\n        value: multipleLocalesByLanguageTagQuery.join(),\n        onChange: function onChange(event) {\n          return setMultipleLocalesByLanguageTagQuery(event.target.value.split(\",\"));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }\n      })),\n      code: multipleLocalesByLanguageTagCode,\n      onClick: handleMultipleLocalesByLanguageTag,\n      results: {\n        data: multipleLocalesByLanguageTag,\n        display: displayMultipleLocalesByLanguageTagResult,\n        onToggle: function onToggle() {\n          return setDisplayMultipleLocalesByLanguageTagResult(!displayMultipleLocalesByLanguageTagResult);\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }))), __jsx(\"footer\", {\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/marcelovicentegc/i18n-iso-languages\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }\n  }, \"Brought to you with \\u2764\\uFE0F by Marcelo Cardoso\")), __jsx(react_toastify__WEBPACK_IMPORTED_MODULE_6__[\"ToastContainer\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }\n  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"3625174485\",\n    __self: this\n  }, \".container.jsx-2411788270{min-height:100vh;padding:0 0.5rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}main.jsx-2411788270{padding:5rem 0;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}footer.jsx-2411788270{width:100%;height:100px;border-top:1px solid #eaeaea;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}footer.jsx-2411788270 img.jsx-2411788270{margin-left:0.5rem;}footer.jsx-2411788270 a.jsx-2411788270{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}a.jsx-2411788270{color:inherit;-webkit-text-decoration:none;text-decoration:none;}.title.jsx-2411788270 a.jsx-2411788270{color:#0070f3;-webkit-text-decoration:none;text-decoration:none;}.title.jsx-2411788270 a.jsx-2411788270:hover,.title.jsx-2411788270 a.jsx-2411788270:focus,.title.jsx-2411788270 a.jsx-2411788270:active{-webkit-text-decoration:underline;text-decoration:underline;}.title.jsx-2411788270{margin:0;line-height:1.15;font-size:4rem;}.title.jsx-2411788270,.description.jsx-2411788270{text-align:center;}.description.jsx-2411788270{line-height:1.5;font-size:1.5rem;}.grid.jsx-2411788270{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;max-width:1260px;margin-top:3rem;}.codeBlockContainer.jsx-2411788270{max-width:calc(100vw - 2.5rem);}.logo.jsx-2411788270{height:1em;}@media (max-width:600px){.grid.jsx-2411788270{width:calc(100vw - 2.5rem);-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.title.jsx-2411788270{font-size:3rem;}.description.jsx-2411788270{font-size:1rem;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/home/marcelo/Documents/i18n-language-codes/demo/pages/index.tsx */\"), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"1712543154\",\n    __self: this\n  }, \"html,body{--scrollbarBG:#fff;--thumbBG:#000;--blue:#2684ff;-webkit-scrollbar-width:thin;-moz-scrollbar-width:thin;-ms-scrollbar-width:thin;scrollbar-width:thin;-webkit-scrollbar-color:var(--thumbBG) var(--scrollbarBG);-moz-scrollbar-color:var(--thumbBG) var(--scrollbarBG);-ms-scrollbar-color:var(--thumbBG) var(--scrollbarBG);scrollbar-color:var(--thumbBG) var(--scrollbarBG);padding:0;margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto, Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue, sans-serif;}*{box-sizing:border-box;}html::-webkit-scrollbar-thumb{background-color:var(--thumbBG);border-radius:6px;border:3px solid var(--scrollbarBG);}html::-webkit-scrollbar-track{background:var(--scrollbarBG);}html::-webkit-scrollbar{width:11px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/home/marcelo/Documents/i18n-language-codes/demo/pages/index.tsx */\"));\n}\n\n_s(Home, \"xofUOXHtOwg4+cqG29xzrNQKVLA=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvaW5kZXgudHN4P2RiNzYiXSwibmFtZXMiOlsiY29uZmlndXJlIiwib3B0aW9ucyIsImNvbmYiLCJkZWZhdWx0TG9va3VwS2V5IiwiZGVmYXVsdExvY2FsZXMiLCJsb2NhbGVzQ29uZmlnUGxhY2Vob2xkZXIiLCJsb2NhbGVzU3Vic2V0IiwibG9va3VwS2V5IiwibG9jYWxlcyIsImRlZmF1bHRNdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnUXVlcnkiLCJkZWZhdWx0U2luZ2xlTG9jYWxlQnlMYW5ndWFnZVRhZ1F1ZXJ5IiwiSG9tZSIsInVzZVN0YXRlIiwiZGVtb0xvb2t1cEtleSIsInNldERlbW9Mb29rdXBLZXkiLCJkZW1vTG9jYWxlcyIsInNldERlbW9Mb2NhbGVzIiwiZGlzcGxheUdldExvY2FsZXNSZXN1bHQiLCJzZXREaXNwbGF5R2V0TG9jYWxlc1Jlc3VsdCIsImRpc3BsYXlTaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnUmVzdWx0Iiwic2V0RGlzcGxheVNpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWdSZXN1bHQiLCJkaXNwbGF5TXVsdGlwbGVMb2NhbGVzQnlMYW5ndWFnZVRhZ1Jlc3VsdCIsInNldERpc3BsYXlNdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnUmVzdWx0IiwiZGVtb0xvY2FsZXNQbGFjZWhvbGRlciIsInNldERlbW9Mb2NhbGVzUGxhY2Vob2xkZXIiLCJtdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnUXVlcnkiLCJzZXRNdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnUXVlcnkiLCJzaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnUXVlcnkiLCJzZXRTaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnUXVlcnkiLCJzaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnIiwic2V0U2luZ2xlTG9jYWxlQnlMYW5ndWFnZVRhZyIsIm11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWciLCJzZXRNdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnIiwibG9jYWxlc0J5R2V0TG9jYWxlcyIsInNldExvY2FsZXNCeUdldExvY2FsZXMiLCJ2YWx1ZSIsImxhYmVsIiwiaGFuZGxlU2VsZWN0T25DaGFuZ2UiLCJjb25maWciLCJmaW5kIiwiaGFuZGxlRGVtb0xvY2FsZXMiLCJub3RpZnlPbkNvbmZpZ3VyZSIsImdldExvY2FsZXMiLCJ0b2FzdCIsImxlbmd0aCIsInR5cGUiLCJoYW5kbGVPbkNvbmZpZ3VyZSIsImhhbmRsZUdldExvY2FsZXMiLCJoYW5kbGVTaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnIiwibG9jYWxlIiwiZ2V0TG9jYWxlQnlJRVRGTGFuZ3VhZ2VUYWciLCJoYW5kbGVNdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnIiwiY29uZmlndXJlQ29kZSIsIm1hcCIsImdldExvY2FsZXNDb2RlIiwic2luZ2xlTG9jYWxlQnlMYW5ndWFnZVRhZ0NvZGUiLCJtdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnQ29kZSIsImNvZGUiLCJvbkNsaWNrIiwiaW5wdXRzIiwib3B0aW9uIiwiam9pbiIsImV2ZW50IiwidGFyZ2V0Iiwic3BsaXQiLCJyZXN1bHRzIiwiZGF0YSIsImRpc3BsYXkiLCJvblRvZ2dsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVUE7QUFDQTtBQUNBO0FBQ0E7O0FBU0EsSUFBTUEsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQ0MsT0FBRCxFQUE0QjtBQUM1Q0Msd0ZBQUksQ0FBQ0QsT0FBRCxDQUFKO0FBQ0QsQ0FGRDs7QUFJQSxJQUFNRSxnQkFBMkIsR0FBRyxpQkFBcEM7QUFDQSxJQUFNQyxjQUFjLEdBQUcsQ0FBQyxPQUFELEVBQVUsT0FBVixFQUFtQixPQUFuQixFQUE0QixPQUE1QixFQUFxQyxPQUFyQyxDQUF2QjtBQUNBLElBQU1DLHdCQUE4QyxHQUFHLENBQ3JEO0FBQ0VDLGVBQWEsRUFBRTtBQUNiQyxhQUFT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QTtBQUFBO0FBQUE7QUFBQSxLQUNFO0FBQ0UsUUFBSSxFQUFDLHdEQURQO0FBRUUsVUFBTSxFQUFDLFFBRlQ7QUFHRSxPQUFHLEVBQUMscUJBSE47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDJEQURGLENBbklGLEVBNklFLE1BQUMsNkRBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQTdJRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx1OXJCQURGO0FBNlJEOztHQTNidUJWLEk7O0tBQUFBLEkiLCJmaWxlIjoiLi9wYWdlcy9pbmRleC50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5pbXBvcnQgU2VsZWN0IGZyb20gXCJyZWFjdC1zZWxlY3RcIjtcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBDb2RlQmxvY2sgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Db2RlQmxvY2tcIjtcbmltcG9ydCB7XG4gIGNvbmZpZ3VyZSBhcyBjb25mLFxuICBnZXRMb2NhbGVzLFxuICBMb2NhbGVLZXksXG4gIGdldExvY2FsZUJ5SUVURkxhbmd1YWdlVGFnLFxuICBMb2NhbGUsXG59IGZyb20gXCJAbWFyY2Vsb3ZpY2VudGVnYy9pMThuLWlzby1sYW5ndWFnZXNcIjtcbmltcG9ydCB7IFJlc3VsdCB9IGZyb20gXCIuLi9jb21wb25lbnRzL1Jlc3VsdFwiO1xuaW1wb3J0IHsgQ29sbGFwc2libGUgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Db2xsYXBzaWJsZVwiO1xuaW1wb3J0IHsgU2VwYXJhdG9yIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VwYXJhdG9yXCI7XG5pbXBvcnQgeyBUb2FzdENvbnRhaW5lciwgdG9hc3QgfSBmcm9tIFwicmVhY3QtdG9hc3RpZnlcIjtcbmltcG9ydCB7IENhcmQgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkXCI7XG5pbXBvcnQgXCJyZWFjdC10b2FzdGlmeS9kaXN0L1JlYWN0VG9hc3RpZnkuY3NzXCI7XG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gXCIuLi9jb21wb25lbnRzL0lucHV0XCI7XG5cbmludGVyZmFjZSBDb25maWdPcHRpb25zIHtcbiAgbG9jYWxlc1N1YnNldDoge1xuICAgIGxvb2t1cEtleTogTG9jYWxlS2V5O1xuICAgIGxvY2FsZXM6IHN0cmluZ1tdO1xuICB9O1xufVxuXG5jb25zdCBjb25maWd1cmUgPSAob3B0aW9uczogQ29uZmlnT3B0aW9ucykgPT4ge1xuICBjb25mKG9wdGlvbnMpO1xufTtcblxuY29uc3QgZGVmYXVsdExvb2t1cEtleTogTG9jYWxlS2V5ID0gXCJJRVRGTGFuZ3VhZ2VUYWdcIjtcbmNvbnN0IGRlZmF1bHRMb2NhbGVzID0gW1wicHQtQlJcIiwgXCJlbi1VU1wiLCBcInpoLUNOXCIsIFwiZXMtTVhcIiwgXCJoaS1JTlwiXTtcbmNvbnN0IGxvY2FsZXNDb25maWdQbGFjZWhvbGRlcjogQXJyYXk8Q29uZmlnT3B0aW9ucz4gPSBbXG4gIHtcbiAgICBsb2NhbGVzU3Vic2V0OiB7XG4gICAgICBsb29rdXBLZXk6IGRlZmF1bHRMb29rdXBLZXksXG4gICAgICBsb2NhbGVzOiBkZWZhdWx0TG9jYWxlcyxcbiAgICB9LFxuICB9LFxuICB7XG4gICAgbG9jYWxlc1N1YnNldDoge1xuICAgICAgbG9va3VwS2V5OiBcIklTTzMxNjYxQWxwaGEyXCIsXG4gICAgICBsb2NhbGVzOiBbXCJQVFwiLCBcIlVTXCIsIFwiQ0hcIiwgXCJNWFwiLCBcIklOXCJdLFxuICAgIH0sXG4gIH0sXG4gIHtcbiAgICBsb2NhbGVzU3Vic2V0OiB7XG4gICAgICBsb29rdXBLZXk6IFwiSVNPMzE2NjFBbHBoYTNcIixcbiAgICAgIGxvY2FsZXM6IFtcIkJSQVwiLCBcIlVTQVwiLCBcIkNITlwiLCBcIk1FWFwiLCBcIklORFwiXSxcbiAgICB9LFxuICB9LFxuICB7XG4gICAgbG9jYWxlc1N1YnNldDoge1xuICAgICAgbG9va3VwS2V5OiBcIklTTzYzOTFcIixcbiAgICAgIGxvY2FsZXM6IFtcInB0XCIsIFwiZW5cIiwgXCJ6aFwiLCBcImVzXCIsIFwiaGlcIl0sXG4gICAgfSxcbiAgfSxcbiAge1xuICAgIGxvY2FsZXNTdWJzZXQ6IHtcbiAgICAgIGxvb2t1cEtleTogXCJJU082MzkyXCIsXG4gICAgICBsb2NhbGVzOiBbXCJwb3JcIiwgXCJlbmdcIiwgXCJ6aG9cIiwgXCJzcGFcIiwgXCJoaW5cIl0sXG4gICAgfSxcbiAgfSxcbiAge1xuICAgIGxvY2FsZXNTdWJzZXQ6IHtcbiAgICAgIGxvb2t1cEtleTogXCJvZmZpY2lhbExhbmd1YWdlXCIsXG4gICAgICBsb2NhbGVzOiBbXCJQb3J0dWd1ZXNlXCIsIFwiRW5nbGlzaFwiLCBcIkNoaW5lc2VcIiwgXCJTcGFuaXNoXCIsIFwiSGluZGlcIl0sXG4gICAgfSxcbiAgfSxcbiAge1xuICAgIGxvY2FsZXNTdWJzZXQ6IHtcbiAgICAgIGxvb2t1cEtleTogXCJuYXRpdmVPZmZpY2lhbExhbmd1YWdlXCIsXG4gICAgICBsb2NhbGVzOiBbXCJQb3J0dWd1w6pzXCIsIFwiRW5nbGlzaFwiLCBcIuS4reaWh1wiLCBcIkVzcGHDsW9sXCIsIFwi4KS54KS/4KSo4KWN4KSm4KWAXCJdLFxuICAgIH0sXG4gIH0sXG4gIHtcbiAgICBsb2NhbGVzU3Vic2V0OiB7XG4gICAgICBsb29rdXBLZXk6IFwicmVnaW9uXCIsXG4gICAgICBsb2NhbGVzOiBbXCJCcmF6aWxcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIkNoaW5hXCIsIFwiTWV4aWNvXCIsIFwiSW5kaWFcIl0sXG4gICAgfSxcbiAgfSxcbiAge1xuICAgIGxvY2FsZXNTdWJzZXQ6IHtcbiAgICAgIGxvb2t1cEtleTogXCJuYXRpdmVSZWdpb25cIixcbiAgICAgIGxvY2FsZXM6IFtcbiAgICAgICAgXCJCcmFzaWxcIixcbiAgICAgICAgXCJVbml0ZWQgS2luZ2RvbVwiLFxuICAgICAgICBcIuS4reWNjuS6uuawkeWFseWSjOWbvVwiLFxuICAgICAgICBcIk3DqXhpY29cIixcbiAgICAgICAgXCLgpK3gpL7gpLDgpKQg4KSX4KSj4KSw4KS+4KSc4KWN4KSvXCIsXG4gICAgICBdLFxuICAgIH0sXG4gIH0sXG5dO1xuY29uc3QgZGVmYXVsdE11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWdRdWVyeSA9IFtcImVuLVVTXCIsIFwiZXMtTVhcIl07XG5jb25zdCBkZWZhdWx0U2luZ2xlTG9jYWxlQnlMYW5ndWFnZVRhZ1F1ZXJ5ID0gXCJoaS1JTlwiO1xuXG5jb25maWd1cmUoe1xuICBsb2NhbGVzU3Vic2V0OiB7XG4gICAgbG9va3VwS2V5OiBkZWZhdWx0TG9va3VwS2V5LFxuICAgIGxvY2FsZXM6IGRlZmF1bHRMb2NhbGVzLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoKSB7XG4gIGNvbnN0IFtkZW1vTG9va3VwS2V5LCBzZXREZW1vTG9va3VwS2V5XSA9IHVzZVN0YXRlPExvY2FsZUtleT4oXG4gICAgXCJJRVRGTGFuZ3VhZ2VUYWdcIlxuICApO1xuICBjb25zdCBbZGVtb0xvY2FsZXMsIHNldERlbW9Mb2NhbGVzXSA9IHVzZVN0YXRlPHN0cmluZ1tdPihkZWZhdWx0TG9jYWxlcyk7XG4gIGNvbnN0IFtkaXNwbGF5R2V0TG9jYWxlc1Jlc3VsdCwgc2V0RGlzcGxheUdldExvY2FsZXNSZXN1bHRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbXG4gICAgZGlzcGxheVNpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWdSZXN1bHQsXG4gICAgc2V0RGlzcGxheVNpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWdSZXN1bHQsXG4gIF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtcbiAgICBkaXNwbGF5TXVsdGlwbGVMb2NhbGVzQnlMYW5ndWFnZVRhZ1Jlc3VsdCxcbiAgICBzZXREaXNwbGF5TXVsdGlwbGVMb2NhbGVzQnlMYW5ndWFnZVRhZ1Jlc3VsdCxcbiAgXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW1xuICAgIGRlbW9Mb2NhbGVzUGxhY2Vob2xkZXIsXG4gICAgc2V0RGVtb0xvY2FsZXNQbGFjZWhvbGRlcixcbiAgXSA9IHVzZVN0YXRlPENvbmZpZ09wdGlvbnM+KGxvY2FsZXNDb25maWdQbGFjZWhvbGRlclswXSk7XG4gIGNvbnN0IFtcbiAgICBtdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnUXVlcnksXG4gICAgc2V0TXVsdGlwbGVMb2NhbGVzQnlMYW5ndWFnZVRhZ1F1ZXJ5LFxuICBdID0gdXNlU3RhdGUoZGVmYXVsdE11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWdRdWVyeSk7XG4gIGNvbnN0IFtcbiAgICBzaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnUXVlcnksXG4gICAgc2V0U2luZ2xlTG9jYWxlQnlMYW5ndWFnZVRhZ1F1ZXJ5LFxuICBdID0gdXNlU3RhdGUoZGVmYXVsdFNpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWdRdWVyeSk7XG4gIGNvbnN0IFtcbiAgICBzaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnLFxuICAgIHNldFNpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWcsXG4gIF0gPSB1c2VTdGF0ZTxMb2NhbGU+KCk7XG4gIGNvbnN0IFtcbiAgICBtdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnLFxuICAgIHNldE11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWcsXG4gIF0gPSB1c2VTdGF0ZTxMb2NhbGVbXT4oW10pO1xuICBjb25zdCBbbG9jYWxlc0J5R2V0TG9jYWxlcywgc2V0TG9jYWxlc0J5R2V0TG9jYWxlc10gPSB1c2VTdGF0ZTxMb2NhbGVbXT4oW10pO1xuXG4gIGNvbnN0IG9wdGlvbnM6IHsgdmFsdWU6IExvY2FsZUtleTsgbGFiZWw6IHN0cmluZyB9W10gPSBbXG4gICAgeyB2YWx1ZTogXCJJRVRGTGFuZ3VhZ2VUYWdcIiwgbGFiZWw6IFwiSUVURiBsYW5ndWFnZSB0YWdcIiB9LFxuICAgIHsgdmFsdWU6IFwiSVNPMzE2NjFBbHBoYTJcIiwgbGFiZWw6IFwiSVNPIDMxNjYtMSBhbHBoYS0yXCIgfSxcbiAgICB7IHZhbHVlOiBcIklTTzMxNjYxQWxwaGEzXCIsIGxhYmVsOiBcIklTTyAzMTY2LTEgYWxwaGEtM1wiIH0sXG4gICAgeyB2YWx1ZTogXCJJU082MzkxXCIsIGxhYmVsOiBcIklTTyA2MzktMVwiIH0sXG4gICAgeyB2YWx1ZTogXCJJU082MzkyXCIsIGxhYmVsOiBcIklTTyA2MzktMlwiIH0sXG4gICAgeyB2YWx1ZTogXCJuYXRpdmVPZmZpY2lhbExhbmd1YWdlXCIsIGxhYmVsOiBcIk5hdGl2ZSBvZmZpY2lhbCBsYW5ndWFnZVwiIH0sXG4gICAgeyB2YWx1ZTogXCJuYXRpdmVSZWdpb25cIiwgbGFiZWw6IFwiTmF0aXZlIHJlZ2lvblwiIH0sXG4gICAgeyB2YWx1ZTogXCJvZmZpY2lhbExhbmd1YWdlXCIsIGxhYmVsOiBcIk9mZmljaWFsIGxhbmd1YWdlXCIgfSxcbiAgICB7IHZhbHVlOiBcInJlZ2lvblwiLCBsYWJlbDogXCJSZWdpb25cIiB9LFxuICBdO1xuXG4gIGNvbnN0IGhhbmRsZVNlbGVjdE9uQ2hhbmdlID0gKHZhbHVlOiBMb2NhbGVLZXkpID0+IHtcbiAgICBzZXREZW1vTG9va3VwS2V5KHZhbHVlKTtcblxuICAgIGNvbnN0IGNvbmZpZyA9IGxvY2FsZXNDb25maWdQbGFjZWhvbGRlci5maW5kKFxuICAgICAgKGNvbmYpID0+IGNvbmYubG9jYWxlc1N1YnNldC5sb29rdXBLZXkgPT09IHZhbHVlXG4gICAgKTtcblxuICAgIHNldERlbW9Mb2NhbGVzKGNvbmZpZy5sb2NhbGVzU3Vic2V0LmxvY2FsZXMpO1xuICAgIHNldERlbW9Mb2NhbGVzUGxhY2Vob2xkZXIoY29uZmlnKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVEZW1vTG9jYWxlcyA9ICh2YWx1ZTogc3RyaW5nW10pID0+IHNldERlbW9Mb2NhbGVzKHZhbHVlKTtcblxuICBjb25zdCBub3RpZnlPbkNvbmZpZ3VyZSA9ICgpID0+IHtcbiAgICBjb25zdCBsb2NhbGVzID0gZ2V0TG9jYWxlcygpO1xuXG4gICAgdG9hc3QoXG4gICAgICBgQ29uZmlndXJlZCBsb2NhbGVzIHN1YnNldCB3aXRoICR7bG9jYWxlcy5sZW5ndGh9IGxvY2FsZSBvYmplY3Qke1xuICAgICAgICBsb2NhbGVzLmxlbmd0aCA+IDEgPyBcInNcIiA6IFwiXCJcbiAgICAgIH0hYCxcbiAgICAgIHtcbiAgICAgICAgdHlwZTogXCJzdWNjZXNzXCIsXG4gICAgICB9XG4gICAgKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNvbmZpZ3VyZSA9ICgpID0+IHtcbiAgICBjb25maWd1cmUoe1xuICAgICAgbG9jYWxlc1N1YnNldDoge1xuICAgICAgICBsb29rdXBLZXk6IGRlbW9Mb29rdXBLZXksXG4gICAgICAgIGxvY2FsZXM6IGRlbW9Mb2NhbGVzLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIG5vdGlmeU9uQ29uZmlndXJlKCk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlR2V0TG9jYWxlcyA9ICgpID0+IHtcbiAgICBjb25zdCBsb2NhbGVzID0gZ2V0TG9jYWxlcygpO1xuICAgIHNldExvY2FsZXNCeUdldExvY2FsZXMobG9jYWxlcyk7XG4gICAgc2V0RGlzcGxheUdldExvY2FsZXNSZXN1bHQodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlU2luZ2xlTG9jYWxlQnlMYW5ndWFnZVRhZyA9ICgpID0+IHtcbiAgICBjb25zdCBsb2NhbGUgPSBnZXRMb2NhbGVCeUlFVEZMYW5ndWFnZVRhZyhcbiAgICAgIHNpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWdRdWVyeVxuICAgICkgYXMgTG9jYWxlO1xuXG4gICAgc2V0U2luZ2xlTG9jYWxlQnlMYW5ndWFnZVRhZyhsb2NhbGUpO1xuICAgIHNldERpc3BsYXlTaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnUmVzdWx0KHRydWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWcgPSAoKSA9PiB7XG4gICAgY29uc3QgbG9jYWxlcyA9IGdldExvY2FsZUJ5SUVURkxhbmd1YWdlVGFnKFxuICAgICAgbXVsdGlwbGVMb2NhbGVzQnlMYW5ndWFnZVRhZ1F1ZXJ5XG4gICAgKSBhcyBMb2NhbGVbXTtcblxuICAgIHNldE11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWcobG9jYWxlcyk7XG4gICAgc2V0RGlzcGxheU11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWdSZXN1bHQodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgY29uZmlndXJlQ29kZSA9IGBcbmltcG9ydCB7IGNvbmZpZ3VyZSB9IGZyb20gJ0BtYXJjZWxvdmljZW50ZWdjL2kxOG4taXNvLWxhbmd1YWdlcydcbiAgICAgICAgICAgICAgICBcbmNvbmZpZ3VyZSh7XG4gIGxvY2FsZXNTdWJzZXQ6IHtcbiAgICBsb29rdXBLZXk6ICcke2RlbW9Mb29rdXBLZXl9JyxcbiAgICBsb2NhbGVzOiBbJHtkZW1vTG9jYWxlcy5tYXAoKGxvY2FsZSkgPT4gYCcke2xvY2FsZX0nYCl9XSxcbiAgfSxcbn0pXG5gO1xuXG4gIGNvbnN0IGdldExvY2FsZXNDb2RlID0gYFxuaW1wb3J0IHsgZ2V0TG9jYWxlcyB9IGZyb20gJ0BtYXJjZWxvdmljZW50ZWdjL2kxOG4taXNvLWxhbmd1YWdlcydcbiAgICAgICAgICAgICAgICBcbmNvbnN0IGxvY2FsZXMgPSBnZXRMb2NhbGVzKClcbiAgXG5sb2NhbGVzLm1hcCgobG9jYWxlKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICA8U2VwYXJhdG9yIC8+XG4gICAgPHA+T2ZmaWNpYWwgbGFuZ3VhZ2U6IHtsb2NhbGUub2ZmaWNpYWxMYW5ndWFnZX08L3A+XG4gICAgPHA+XG4gICAgICBOYXRpdmUgb2ZmaWNpYWwgbGFuZ3VhZ2U6IHtsb2NhbGUubmF0aXZlT2ZmaWNpYWxMYW5ndWFnZX1cbiAgICA8L3A+XG4gICAgPHA+UmVnaW9uOiB7bG9jYWxlLnJlZ2lvbn08L3A+XG4gICAgPHA+TmF0aXZlIHJlZ2lvbjoge2xvY2FsZS5uYXRpdmVSZWdpb259PC9wPlxuICAgIDxwPklTTyA2MzktMToge2xvY2FsZS5JU082MzkxfTwvcD5cbiAgICA8cD5JU08gMzE2Ni0xIGFscGhhLTI6IHtsb2NhbGUuSVNPMzE2NjFBbHBoYTJ9PC9wPlxuICAgIDxwPklTTyAzMTY2LTEgYWxwaGEtMzoge2xvY2FsZS5JU08zMTY2MUFscGhhM308L3A+XG4gICAgPHA+SUVURkwgbGFuZ3VhZ2UgdGFnOiB7bG9jYWxlLklFVEZMYW5ndWFnZVRhZ308L3A+XG4gICAgPC8+XG4gICk7XG59KVxuXG5gO1xuXG4gIGNvbnN0IHNpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWdDb2RlID0gYFxuaW1wb3J0IHsgZ2V0TG9jYWxlQnlJRVRGTGFuZ3VhZ2VUYWcsIExvY2FsZSB9IGZyb20gJ0BtYXJjZWxvdmljZW50ZWdjL2kxOG4taXNvLWxhbmd1YWdlcydcbiAgICAgICAgICAgICAgICBcbmNvbnN0IGxvY2FsZSA9IGdldExvY2FsZUJ5SUVURkxhbmd1YWdlVGFnKCcke3NpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWdRdWVyeX0nKSBhcyBMb2NhbGVcbiAgICAgICAgICAgICAgICBgO1xuXG4gIGNvbnN0IG11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWdDb2RlID0gYFxuaW1wb3J0IHsgZ2V0TG9jYWxlQnlJRVRGTGFuZ3VhZ2VUYWcsIExvY2FsZSB9IGZyb20gJ0BtYXJjZWxvdmljZW50ZWdjL2kxOG4taXNvLWxhbmd1YWdlcydcbiAgICAgICAgICAgICAgICBcbmNvbnN0IGxvY2FsZXMgPSBnZXRMb2NhbGVCeUlFVEZMYW5ndWFnZVRhZyhbJHttdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnUXVlcnkubWFwKFxuICAgIChsb2NhbGUpID0+IGAnJHtsb2NhbGV9J2BcbiAgKX1dKSBhcyBMb2NhbGVbXWA7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT5pMThuLWlzby1sYW5ndWFnZXM8L3RpdGxlPlxuICAgICAgICA8bGluayByZWw9XCJpY29uXCIgaHJlZj1cIi9mYXZpY29uLmljb1wiIC8+XG4gICAgICA8L0hlYWQ+XG5cbiAgICAgIDxtYWluPlxuICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGl0bGVcIj5pMThuLWlzby1sYW5ndWFnZXM8L2gxPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJkZXNjcmlwdGlvblwiPkdldCBzdGFydGVkIGJ5IGFkZGluZyBpdCB0byB5b3VyIHByb2plY3QgPC9wPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvZGVCbG9ja0NvbnRhaW5lclwiPlxuICAgICAgICAgIDxDb2RlQmxvY2s+XG4gICAgICAgICAgICB5YXJuIGFkZCBAbWFyY2Vsb3ZpY2VudGVnYy9pMThuLWlzby1sYW5ndWFnZXMgPGJyIC8+XG4gICAgICAgICAgICBucG0gaSBAbWFyY2Vsb3ZpY2VudGVnYy9pMThuLWlzby1sYW5ndWFnZVxuICAgICAgICAgIDwvQ29kZUJsb2NrPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkXCI+XG4gICAgICAgICAgPENhcmRcbiAgICAgICAgICAgIHRpdGxlPXtcImNvbmZpZ3VyZVwifVxuICAgICAgICAgICAgc2VjdGlvbnM9e1tcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvZGU6IGNvbmZpZ3VyZUNvZGUsXG4gICAgICAgICAgICAgICAgb25DbGljazogaGFuZGxlT25Db25maWd1cmUsXG4gICAgICAgICAgICAgICAgaW5wdXRzOiAoXG4gICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICA8aDQ+bG9va3VwIGtleTwvaDQ+XG4gICAgICAgICAgICAgICAgICAgIDxTZWxlY3RcbiAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zPXtvcHRpb25zfVxuICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17b3B0aW9uc1swXX1cbiAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KG9wdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IExvY2FsZUtleTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlU2VsZWN0T25DaGFuZ2Uob3B0aW9uLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8aDQ+bG9jYWxlczwvaDQ+XG4gICAgICAgICAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtkZW1vTG9jYWxlc1BsYWNlaG9sZGVyLmxvY2FsZXNTdWJzZXQubG9jYWxlcy5qb2luKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCIsXCJcbiAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtkZW1vTG9jYWxlcy5qb2luKCl9XG4gICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhldmVudCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZURlbW9Mb2NhbGVzKGV2ZW50LnRhcmdldC52YWx1ZS5zcGxpdChcIixcIikpXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8Q2FyZFxuICAgICAgICAgICAgdGl0bGU9e1wiZ2V0TG9jYWxlc1wifVxuICAgICAgICAgICAgc2VjdGlvbnM9e1tcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvZGU6IGdldExvY2FsZXNDb2RlLFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s6IGhhbmRsZUdldExvY2FsZXMsXG4gICAgICAgICAgICAgICAgcmVzdWx0czoge1xuICAgICAgICAgICAgICAgICAgZGF0YTogbG9jYWxlc0J5R2V0TG9jYWxlcyxcbiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGRpc3BsYXlHZXRMb2NhbGVzUmVzdWx0LFxuICAgICAgICAgICAgICAgICAgb25Ub2dnbGU6ICgpID0+XG4gICAgICAgICAgICAgICAgICAgIHNldERpc3BsYXlHZXRMb2NhbGVzUmVzdWx0KCFkaXNwbGF5R2V0TG9jYWxlc1Jlc3VsdCksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8Q2FyZFxuICAgICAgICAgICAgdGl0bGU9XCJnZXRMb2NhbGVCeUlFVEZMYW5ndWFnZVRhZ1wiXG4gICAgICAgICAgICBzZWN0aW9ucz17W1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW5wdXRzOiAoXG4gICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICA8aDQ+XG4gICAgICAgICAgICAgICAgICAgICAgWW91IGNhbiBnZXQgYSBzaW5nbGUgbG9jYWxlIGJ5IGxhbmd1YWdlIHRhZyBieSBwcm92aWRpbmcgYVxuICAgICAgICAgICAgICAgICAgICAgIHNpbmdsZSBsYW5ndWFnZSB0YWcuLi5cbiAgICAgICAgICAgICAgICAgICAgPC9oND5cbiAgICAgICAgICAgICAgICAgICAgPElucHV0XG4gICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e2RlZmF1bHRTaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnUXVlcnl9XG4gICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3NpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWdRdWVyeX1cbiAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGV2ZW50KSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0U2luZ2xlTG9jYWxlQnlMYW5ndWFnZVRhZ1F1ZXJ5KGV2ZW50LnRhcmdldC52YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIGNvZGU6IHNpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWdDb2RlLFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s6IGhhbmRsZVNpbmdsZUxvY2FsZUJ5TGFuZ3VhZ2VUYWcsXG4gICAgICAgICAgICAgICAgcmVzdWx0czoge1xuICAgICAgICAgICAgICAgICAgZGF0YTogc2luZ2xlTG9jYWxlQnlMYW5ndWFnZVRhZyxcbiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGRpc3BsYXlTaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnUmVzdWx0LFxuICAgICAgICAgICAgICAgICAgb25Ub2dnbGU6ICgpID0+XG4gICAgICAgICAgICAgICAgICAgIHNldERpc3BsYXlTaW5nbGVMb2NhbGVCeUxhbmd1YWdlVGFnUmVzdWx0KFxuICAgICAgICAgICAgICAgICAgICAgICFkaXNwbGF5U2luZ2xlTG9jYWxlQnlMYW5ndWFnZVRhZ1Jlc3VsdFxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbnB1dHM6IChcbiAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgIDxoND5cbiAgICAgICAgICAgICAgICAgICAgICBPciB5b3UgY2FuIGdldCBtdWx0aXBsZSBieSBwcm92aWRpbmcgbXVsdGlwbGUgbGFuZ3VhZ2VcbiAgICAgICAgICAgICAgICAgICAgICB0YWdzIVxuICAgICAgICAgICAgICAgICAgICA8L2g0PlxuICAgICAgICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17ZGVmYXVsdE11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWdRdWVyeS5qb2luKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCIsXCJcbiAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXttdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnUXVlcnkuam9pbigpfVxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZXZlbnQpID0+XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRNdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnUXVlcnkoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnRhcmdldC52YWx1ZS5zcGxpdChcIixcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIGNvZGU6IG11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWdDb2RlLFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s6IGhhbmRsZU11bHRpcGxlTG9jYWxlc0J5TGFuZ3VhZ2VUYWcsXG4gICAgICAgICAgICAgICAgcmVzdWx0czoge1xuICAgICAgICAgICAgICAgICAgZGF0YTogbXVsdGlwbGVMb2NhbGVzQnlMYW5ndWFnZVRhZyxcbiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGRpc3BsYXlNdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnUmVzdWx0LFxuICAgICAgICAgICAgICAgICAgb25Ub2dnbGU6ICgpID0+XG4gICAgICAgICAgICAgICAgICAgIHNldERpc3BsYXlNdWx0aXBsZUxvY2FsZXNCeUxhbmd1YWdlVGFnUmVzdWx0KFxuICAgICAgICAgICAgICAgICAgICAgICFkaXNwbGF5TXVsdGlwbGVMb2NhbGVzQnlMYW5ndWFnZVRhZ1Jlc3VsdFxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9tYWluPlxuXG4gICAgICA8Zm9vdGVyPlxuICAgICAgICA8YVxuICAgICAgICAgIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vbWFyY2Vsb3ZpY2VudGVnYy9pMThuLWlzby1sYW5ndWFnZXNcIlxuICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiXG4gICAgICAgID5cbiAgICAgICAgICBCcm91Z2h0IHRvIHlvdSB3aXRoIOKdpO+4jyBieSBNYXJjZWxvIENhcmRvc29cbiAgICAgICAgPC9hPlxuICAgICAgPC9mb290ZXI+XG5cbiAgICAgIDxUb2FzdENvbnRhaW5lciAvPlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5jb250YWluZXIge1xuICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICAgICAgICAgIHBhZGRpbmc6IDAgMC41cmVtO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgbWFpbiB7XG4gICAgICAgICAgcGFkZGluZzogNXJlbSAwO1xuICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICBmb290ZXIge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMTAwcHg7XG4gICAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlYWVhZWE7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9vdGVyIGltZyB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvb3RlciBhIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICBhIHtcbiAgICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAudGl0bGUgYSB7XG4gICAgICAgICAgY29sb3I6ICMwMDcwZjM7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRpdGxlIGE6aG92ZXIsXG4gICAgICAgIC50aXRsZSBhOmZvY3VzLFxuICAgICAgICAudGl0bGUgYTphY3RpdmUge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRpdGxlIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gICAgICAgICAgZm9udC1zaXplOiA0cmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRpdGxlLFxuICAgICAgICAuZGVzY3JpcHRpb24ge1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5ncmlkIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcblxuICAgICAgICAgIG1heC13aWR0aDogMTI2MHB4O1xuICAgICAgICAgIG1hcmdpbi10b3A6IDNyZW07XG4gICAgICAgIH1cblxuICAgICAgICAuY29kZUJsb2NrQ29udGFpbmVyIHtcbiAgICAgICAgICBtYXgtd2lkdGg6IGNhbGMoMTAwdncgLSAyLjVyZW0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLmxvZ28ge1xuICAgICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICB9XG5cbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgICAgICAgLmdyaWQge1xuICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwdncgLSAyLjVyZW0pO1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAudGl0bGUge1xuICAgICAgICAgICAgZm9udC1zaXplOiAzcmVtO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICAgICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG5cbiAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgIGh0bWwsXG4gICAgICAgIGJvZHkge1xuICAgICAgICAgIC0tc2Nyb2xsYmFyQkc6ICNmZmY7XG4gICAgICAgICAgLS10aHVtYkJHOiAjMDAwO1xuICAgICAgICAgIC0tYmx1ZTogIzI2ODRmZjtcblxuICAgICAgICAgIHNjcm9sbGJhci13aWR0aDogdGhpbjtcbiAgICAgICAgICBzY3JvbGxiYXItY29sb3I6IHZhcigtLXRodW1iQkcpIHZhcigtLXNjcm9sbGJhckJHKTtcblxuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFNlZ29lIFVJLCBSb2JvdG8sXG4gICAgICAgICAgICBPeHlnZW4sIFVidW50dSwgQ2FudGFyZWxsLCBGaXJhIFNhbnMsIERyb2lkIFNhbnMsIEhlbHZldGljYSBOZXVlLFxuICAgICAgICAgICAgc2Fucy1zZXJpZjtcbiAgICAgICAgfVxuXG4gICAgICAgICoge1xuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIH1cblxuICAgICAgICBodG1sOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGh1bWJCRyk7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICAgIGJvcmRlcjogM3B4IHNvbGlkIHZhcigtLXNjcm9sbGJhckJHKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGh0bWw6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1zY3JvbGxiYXJCRyk7XG4gICAgICAgIH1cblxuICAgICAgICBodG1sOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgICAgICAgd2lkdGg6IDExcHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ })

})