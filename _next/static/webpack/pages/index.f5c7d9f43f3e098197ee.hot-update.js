webpackHotUpdate_N_E("pages/index",{

/***/ "./components/Card.tsx":
/*!*****************************!*\
  !*** ./components/Card.tsx ***!
  \*****************************/
/*! exports provided: Card */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Card\", function() { return Card; });\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _CodeBlock__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CodeBlock */ \"./components/CodeBlock.tsx\");\n/* harmony import */ var _Collapsible__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Collapsible */ \"./components/Collapsible.tsx\");\n/* harmony import */ var _Result__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Result */ \"./components/Result.tsx\");\n/* harmony import */ var _Separator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Separator */ \"./components/Separator.tsx\");\nvar _jsxFileName = \"/home/marcelo/Documents/i18n-language-codes/demo/components/Card.tsx\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\n\n\n\n\n\nfunction Card(_ref) {\n  _s();\n\n  var _this = this;\n\n  var title = _ref.title,\n      sections = _ref.sections;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(),\n      displayChain = _useState[0],\n      setDisplayChain = _useState[1];\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-4034691440\" + \" \" + \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-4034691440\" + \" \" + \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-4034691440\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, title)), sections.map(function (_ref2, index) {\n    var inputs = _ref2.inputs,\n        onClick = _ref2.onClick,\n        code = _ref2.code,\n        results = _ref2.results;\n    return __jsx(react__WEBPACK_IMPORTED_MODULE_1__[\"Fragment\"], {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, inputs, __jsx(_Separator__WEBPACK_IMPORTED_MODULE_5__[\"Separator\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }), __jsx(_CodeBlock__WEBPACK_IMPORTED_MODULE_2__[\"CodeBlock\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, code), __jsx(\"button\", {\n      onClick: onClick,\n      className: \"jsx-4034691440\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, \"Run the code above \\u261D\\uFE0F\"), Array.isArray(results === null || results === void 0 ? void 0 : results.data) ? results.data.length > 0 && __jsx(_Collapsible__WEBPACK_IMPORTED_MODULE_3__[\"Collapsible\"], {\n      open: results.display,\n      onClick: results.onToggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, results.data.map(function (locale, index) {\n      return __jsx(_Result__WEBPACK_IMPORTED_MODULE_4__[\"Result\"], {\n        index: index,\n        locale: locale,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 32\n        }\n      });\n    })) : (results === null || results === void 0 ? void 0 : results.data) && __jsx(_Collapsible__WEBPACK_IMPORTED_MODULE_3__[\"Collapsible\"], {\n      open: results.display,\n      onClick: results.onToggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, __jsx(_Result__WEBPACK_IMPORTED_MODULE_4__[\"Result\"], {\n      locale: results.data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    })), sections.length - 1 > index && __jsx(_Separator__WEBPACK_IMPORTED_MODULE_5__[\"Separator\"], {\n      thick: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 47\n      }\n    }));\n  })), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"4034691440\",\n    __self: this\n  }, \".card.jsx-4034691440{margin:1rem;-webkit-flex-basis:30%;-ms-flex-preferred-size:30%;flex-basis:30%;max-width:800px;padding:1.5rem;text-align:left;color:inherit;-webkit-text-decoration:none;text-decoration:none;border:1px solid #eaeaea;border-radius:10px;-webkit-transition:color 0.15s ease,border-color 0.15s ease;transition:color 0.15s ease,border-color 0.15s ease;}.card.jsx-4034691440 button.jsx-4034691440{padding:0.5rem;border-radius:4px;background-color:#fff;border:0.5px solid hsl(0,0%,80%);color:hsl(0,0%,20%);cursor:pointer;-webkit-transition:all 100ms;transition:all 100ms;}.card.jsx-4034691440 button.jsx-4034691440:focus,.card.jsx-4034691440 button.jsx-4034691440:hover{outline:none;border:1px solid var(--blue);box-shadow:0 0 0 1px var(--blue);}.card.jsx-4034691440 button.jsx-4034691440:active{outline:none;border:1px solid var(--blue);box-shadow:0 0 0 1px var(--blue);background-color:var(--blue);color:#fff;}.card.jsx-4034691440 h3.jsx-4034691440{margin:0 0 1rem 0;font-size:1.5rem;}.card.jsx-4034691440 p.jsx-4034691440{margin:0;font-size:1.25rem;line-height:1.5;}@media (max-width:600px){.card.jsx-4034691440{width:calc(100% - 1.5rem);}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21hcmNlbG8vRG9jdW1lbnRzL2kxOG4tbGFuZ3VhZ2UtY29kZXMvZGVtby9jb21wb25lbnRzL0NhcmQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThEUyxBQUd5QixBQWFHLEFBV0YsQUFNQSxBQVFLLEFBS1QsQUFPbUIsU0FOVixHQTNDSCxDQXdCYyxBQU1BLEVBakJYLEdBeUJELFFBWWpCLENBTmdCLE1BOUJNLEVBeUJ4QixPQWRtQyxBQU1BLENBY25DLFlBOUJxQyxvQkFXckMsQUFNK0IsR0EvQmIsVUFlTSxNQWRQLFVBK0JKLElBaEJJLENBZEMsTUErQmxCLFFBaEJ1QixFQWRQLGNBQ08sa0NBY3ZCLGdCQWIyQix5QkFDTixtQkFDa0MsZ0hBQ3ZEIiwiZmlsZSI6Ii9ob21lL21hcmNlbG8vRG9jdW1lbnRzL2kxOG4tbGFuZ3VhZ2UtY29kZXMvZGVtby9jb21wb25lbnRzL0NhcmQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCBSZWFjdE5vZGUsIFN5bnRoZXRpY0V2ZW50LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTG9jYWxlIH0gZnJvbSBcIkBtYXJjZWxvdmljZW50ZWdjL2kxOG4taXNvLWxhbmd1YWdlc1wiO1xuaW1wb3J0IHsgQ29kZUJsb2NrIH0gZnJvbSBcIi4vQ29kZUJsb2NrXCI7XG5pbXBvcnQgeyBDb2xsYXBzaWJsZSB9IGZyb20gXCIuL0NvbGxhcHNpYmxlXCI7XG5pbXBvcnQgeyBSZXN1bHQgfSBmcm9tIFwiLi9SZXN1bHRcIjtcbmltcG9ydCB7IFNlcGFyYXRvciB9IGZyb20gXCIuL1NlcGFyYXRvclwiO1xuXG5pbnRlcmZhY2UgQ2FyZFByb3BzIHtcbiAgdGl0bGU6IHN0cmluZztcbiAgc2VjdGlvbnM6IHtcbiAgICBpbnB1dHM/OiBSZWFjdE5vZGU7XG4gICAgY29kZTogc3RyaW5nO1xuICAgIHJlc3VsdHM/OiB7XG4gICAgICBkYXRhPzogTG9jYWxlIHwgTG9jYWxlW107XG4gICAgICBkaXNwbGF5OiBib29sZWFuO1xuICAgICAgb25Ub2dnbGU6IChldmVudDogU3ludGhldGljRXZlbnQ8SFRNTEVsZW1lbnQsIEV2ZW50PikgPT4gdm9pZDtcbiAgICB9O1xuICAgIG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIH1bXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIENhcmQoeyB0aXRsZSwgc2VjdGlvbnMgfTogQ2FyZFByb3BzKSB7XG4gIGNvbnN0IFtkaXNwbGF5Q2hhaW4sIHNldERpc3BsYXlDaGFpbl0gPSB1c2VTdGF0ZSgpO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgIDxoMz57dGl0bGV9PC9oMz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtzZWN0aW9ucy5tYXAoKHsgaW5wdXRzLCBvbkNsaWNrLCBjb2RlLCByZXN1bHRzIH0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxGcmFnbWVudCBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAge2lucHV0c31cbiAgICAgICAgICAgICAgPFNlcGFyYXRvciAvPlxuICAgICAgICAgICAgICA8Q29kZUJsb2NrPntjb2RlfTwvQ29kZUJsb2NrPlxuICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e29uQ2xpY2t9PlJ1biB0aGUgY29kZSBhYm92ZSDimJ3vuI88L2J1dHRvbj5cbiAgICAgICAgICAgICAge0FycmF5LmlzQXJyYXkocmVzdWx0cz8uZGF0YSlcbiAgICAgICAgICAgICAgICA/IHJlc3VsdHMuZGF0YS5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICAgICAgICAgICAgPENvbGxhcHNpYmxlXG4gICAgICAgICAgICAgICAgICAgICAgb3Blbj17cmVzdWx0cy5kaXNwbGF5fVxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3Jlc3VsdHMub25Ub2dnbGV9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICB7cmVzdWx0cy5kYXRhLm1hcCgobG9jYWxlLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxSZXN1bHQgaW5kZXg9e2luZGV4fSBsb2NhbGU9e2xvY2FsZX0gLz47XG4gICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgIDwvQ29sbGFwc2libGU+XG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgOiByZXN1bHRzPy5kYXRhICYmIChcbiAgICAgICAgICAgICAgICAgICAgPENvbGxhcHNpYmxlXG4gICAgICAgICAgICAgICAgICAgICAgb3Blbj17cmVzdWx0cy5kaXNwbGF5fVxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3Jlc3VsdHMub25Ub2dnbGV9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICA8UmVzdWx0IGxvY2FsZT17cmVzdWx0cy5kYXRhfSAvPlxuICAgICAgICAgICAgICAgICAgICA8L0NvbGxhcHNpYmxlPlxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAge3NlY3Rpb25zLmxlbmd0aCAtIDEgPiBpbmRleCAmJiA8U2VwYXJhdG9yIHRoaWNrIC8+fVxuICAgICAgICAgICAgPC9GcmFnbWVudD5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeD5cbiAgICAgICAge2BcbiAgICAgICAgICAuY2FyZCB7XG4gICAgICAgICAgICBtYXJnaW46IDFyZW07XG4gICAgICAgICAgICBmbGV4LWJhc2lzOiAzMCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDgwMHB4O1xuICAgICAgICAgICAgcGFkZGluZzogMS41cmVtO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VhZWFlYTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjE1cyBlYXNlLCBib3JkZXItY29sb3IgMC4xNXMgZWFzZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuY2FyZCBidXR0b24ge1xuICAgICAgICAgICAgcGFkZGluZzogMC41cmVtO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIGJvcmRlcjogMC41cHggc29saWQgaHNsKDAsIDAlLCA4MCUpO1xuICAgICAgICAgICAgY29sb3I6IGhzbCgwLCAwJSwgMjAlKTtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAxMDBtcztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuY2FyZCBidXR0b246Zm9jdXMsXG4gICAgICAgICAgLmNhcmQgYnV0dG9uOmhvdmVyIHtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ibHVlKTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCB2YXIoLS1ibHVlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuY2FyZCBidXR0b246YWN0aXZlIHtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ibHVlKTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCB2YXIoLS1ibHVlKTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJsdWUpO1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmNhcmQgaDMge1xuICAgICAgICAgICAgbWFyZ2luOiAwIDAgMXJlbSAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmNhcmQgcCB7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgICAgICAgICAgLmNhcmQge1xuICAgICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMS41cmVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICA8L3N0eWxlPlxuICAgIDwvPlxuICApO1xufVxuIl19 */\\n/*@ sourceURL=/home/marcelo/Documents/i18n-language-codes/demo/components/Card.tsx */\"));\n}\n\n_s(Card, \"PiXn1NFdqHFtH+N8PAQtV5WT5mw=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9DYXJkLnRzeD9jOTYwIl0sIm5hbWVzIjpbIkNhcmQiLCJ0aXRsZSIsInNlY3Rpb25zIiwidXNlU3RhdGUiLCJkaXNwbGF5Q2hhaW4iLCJzZXREaXNwbGF5Q2hhaW4iLCJtYXAiLCJpbmRleCIsImlucHV0cyIsIm9uQ2xpY2siLCJjb2RlIiwicmVzdWx0cyIsIkFycmF5IiwiaXNBcnJheSIsImRhdGEiLCJsZW5ndGgiLCJkaXNwbGF5Iiwib25Ub2dnbGUiLCJsb2NhbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFnQk8sU0FBU0EsSUFBVCxPQUE4QztBQUFBOztBQUFBOztBQUFBLE1BQTlCQyxLQUE4QixRQUE5QkEsS0FBOEI7QUFBQSxNQUF2QkMsUUFBdUIsUUFBdkJBLFFBQXVCOztBQUFBLGtCQUNYQyxzREFBUSxFQURHO0FBQUEsTUFDNUNDLFlBRDRDO0FBQUEsTUFDOUJDLGVBRDhCOztBQUduRCxTQUNFLG1FQUNFO0FBQUEsd0NBQWUsTUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0U7QUFBQSx3Q0FBZSxLQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FDRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FBS0osS0FBTCxDQURGLENBREYsRUFJR0MsUUFBUSxDQUFDSSxHQUFULENBQWEsaUJBQXFDQyxLQUFyQyxFQUErQztBQUFBLFFBQTVDQyxNQUE0QyxTQUE1Q0EsTUFBNEM7QUFBQSxRQUFwQ0MsT0FBb0MsU0FBcENBLE9BQW9DO0FBQUEsUUFBM0JDLElBQTJCLFNBQTNCQSxJQUEyQjtBQUFBLFFBQXJCQyxPQUFxQixTQUFyQkEsT0FBcUI7QUFDM0QsV0FDRSxNQUFDLDhDQUFEO0FBQVUsU0FBRyxFQUFFSixLQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FDR0MsTUFESCxFQUVFLE1BQUMsb0RBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxNQUZGLEVBR0UsTUFBQyxvREFBRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQVlFLElBQVosQ0FIRixFQUlFO0FBQVEsYUFBTyxFQUFFRCxPQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEseUNBSkYsRUFLR0csS0FBSyxDQUFDQyxPQUFOLENBQWNGLE9BQWQsYUFBY0EsT0FBZCx1QkFBY0EsT0FBTyxDQUFFRyxJQUF2QixJQUNHSCxPQUFPLENBQUNHLElBQVIsQ0FBYUMsTUFBYixHQUFzQixDQUF0QixJQUNFLE1BQUMsd0RBQUQ7QUFDRSxVQUFJLEVBQUVKLE9BQU8sQ0FBQ0ssT0FEaEI7QUFFRSxhQUFPLEVBQUVMLE9BQU8sQ0FBQ00sUUFGbkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUlHTixPQUFPLENBQUNHLElBQVIsQ0FBYVIsR0FBYixDQUFpQixVQUFDWSxNQUFELEVBQVNYLEtBQVQsRUFBbUI7QUFDbkMsYUFBTyxNQUFDLDhDQUFEO0FBQVEsYUFBSyxFQUFFQSxLQUFmO0FBQXNCLGNBQU0sRUFBRVcsTUFBOUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxRQUFQO0FBQ0QsS0FGQSxDQUpILENBRkwsR0FXRyxDQUFBUCxPQUFPLFNBQVAsSUFBQUEsT0FBTyxXQUFQLFlBQUFBLE9BQU8sQ0FBRUcsSUFBVCxLQUNFLE1BQUMsd0RBQUQ7QUFDRSxVQUFJLEVBQUVILE9BQU8sQ0FBQ0ssT0FEaEI7QUFFRSxhQUFPLEVBQUVMLE9BQU8sQ0FBQ00sUUFGbkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUlFLE1BQUMsOENBQUQ7QUFBUSxZQUFNLEVBQUVOLE9BQU8sQ0FBQ0csSUFBeEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxNQUpGLENBakJSLEVBd0JHWixRQUFRLENBQUNhLE1BQVQsR0FBa0IsQ0FBbEIsR0FBc0JSLEtBQXRCLElBQStCLE1BQUMsb0RBQUQ7QUFBVyxXQUFLLE1BQWhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTUF4QmxDLENBREY7QUE0QkQsR0E3QkEsQ0FKSCxDQURGO0FBQUE7QUFBQTtBQUFBLHdsTkFERjtBQWlHRDs7R0FwR2VQLEk7O0tBQUFBLEkiLCJmaWxlIjoiLi9jb21wb25lbnRzL0NhcmQudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCBSZWFjdE5vZGUsIFN5bnRoZXRpY0V2ZW50LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTG9jYWxlIH0gZnJvbSBcIkBtYXJjZWxvdmljZW50ZWdjL2kxOG4taXNvLWxhbmd1YWdlc1wiO1xuaW1wb3J0IHsgQ29kZUJsb2NrIH0gZnJvbSBcIi4vQ29kZUJsb2NrXCI7XG5pbXBvcnQgeyBDb2xsYXBzaWJsZSB9IGZyb20gXCIuL0NvbGxhcHNpYmxlXCI7XG5pbXBvcnQgeyBSZXN1bHQgfSBmcm9tIFwiLi9SZXN1bHRcIjtcbmltcG9ydCB7IFNlcGFyYXRvciB9IGZyb20gXCIuL1NlcGFyYXRvclwiO1xuXG5pbnRlcmZhY2UgQ2FyZFByb3BzIHtcbiAgdGl0bGU6IHN0cmluZztcbiAgc2VjdGlvbnM6IHtcbiAgICBpbnB1dHM/OiBSZWFjdE5vZGU7XG4gICAgY29kZTogc3RyaW5nO1xuICAgIHJlc3VsdHM/OiB7XG4gICAgICBkYXRhPzogTG9jYWxlIHwgTG9jYWxlW107XG4gICAgICBkaXNwbGF5OiBib29sZWFuO1xuICAgICAgb25Ub2dnbGU6IChldmVudDogU3ludGhldGljRXZlbnQ8SFRNTEVsZW1lbnQsIEV2ZW50PikgPT4gdm9pZDtcbiAgICB9O1xuICAgIG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIH1bXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIENhcmQoeyB0aXRsZSwgc2VjdGlvbnMgfTogQ2FyZFByb3BzKSB7XG4gIGNvbnN0IFtkaXNwbGF5Q2hhaW4sIHNldERpc3BsYXlDaGFpbl0gPSB1c2VTdGF0ZSgpO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgIDxoMz57dGl0bGV9PC9oMz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtzZWN0aW9ucy5tYXAoKHsgaW5wdXRzLCBvbkNsaWNrLCBjb2RlLCByZXN1bHRzIH0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxGcmFnbWVudCBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAge2lucHV0c31cbiAgICAgICAgICAgICAgPFNlcGFyYXRvciAvPlxuICAgICAgICAgICAgICA8Q29kZUJsb2NrPntjb2RlfTwvQ29kZUJsb2NrPlxuICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e29uQ2xpY2t9PlJ1biB0aGUgY29kZSBhYm92ZSDimJ3vuI88L2J1dHRvbj5cbiAgICAgICAgICAgICAge0FycmF5LmlzQXJyYXkocmVzdWx0cz8uZGF0YSlcbiAgICAgICAgICAgICAgICA/IHJlc3VsdHMuZGF0YS5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICAgICAgICAgICAgPENvbGxhcHNpYmxlXG4gICAgICAgICAgICAgICAgICAgICAgb3Blbj17cmVzdWx0cy5kaXNwbGF5fVxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3Jlc3VsdHMub25Ub2dnbGV9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICB7cmVzdWx0cy5kYXRhLm1hcCgobG9jYWxlLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxSZXN1bHQgaW5kZXg9e2luZGV4fSBsb2NhbGU9e2xvY2FsZX0gLz47XG4gICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgIDwvQ29sbGFwc2libGU+XG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgOiByZXN1bHRzPy5kYXRhICYmIChcbiAgICAgICAgICAgICAgICAgICAgPENvbGxhcHNpYmxlXG4gICAgICAgICAgICAgICAgICAgICAgb3Blbj17cmVzdWx0cy5kaXNwbGF5fVxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3Jlc3VsdHMub25Ub2dnbGV9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICA8UmVzdWx0IGxvY2FsZT17cmVzdWx0cy5kYXRhfSAvPlxuICAgICAgICAgICAgICAgICAgICA8L0NvbGxhcHNpYmxlPlxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAge3NlY3Rpb25zLmxlbmd0aCAtIDEgPiBpbmRleCAmJiA8U2VwYXJhdG9yIHRoaWNrIC8+fVxuICAgICAgICAgICAgPC9GcmFnbWVudD5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeD5cbiAgICAgICAge2BcbiAgICAgICAgICAuY2FyZCB7XG4gICAgICAgICAgICBtYXJnaW46IDFyZW07XG4gICAgICAgICAgICBmbGV4LWJhc2lzOiAzMCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDgwMHB4O1xuICAgICAgICAgICAgcGFkZGluZzogMS41cmVtO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VhZWFlYTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjE1cyBlYXNlLCBib3JkZXItY29sb3IgMC4xNXMgZWFzZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuY2FyZCBidXR0b24ge1xuICAgICAgICAgICAgcGFkZGluZzogMC41cmVtO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIGJvcmRlcjogMC41cHggc29saWQgaHNsKDAsIDAlLCA4MCUpO1xuICAgICAgICAgICAgY29sb3I6IGhzbCgwLCAwJSwgMjAlKTtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAxMDBtcztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuY2FyZCBidXR0b246Zm9jdXMsXG4gICAgICAgICAgLmNhcmQgYnV0dG9uOmhvdmVyIHtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ibHVlKTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCB2YXIoLS1ibHVlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAuY2FyZCBidXR0b246YWN0aXZlIHtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ibHVlKTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCB2YXIoLS1ibHVlKTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJsdWUpO1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmNhcmQgaDMge1xuICAgICAgICAgICAgbWFyZ2luOiAwIDAgMXJlbSAwO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmNhcmQgcCB7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgICAgICAgICAgLmNhcmQge1xuICAgICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gMS41cmVtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICA8L3N0eWxlPlxuICAgIDwvPlxuICApO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Card.tsx\n");

/***/ }),

/***/ "./components/Collapsible.tsx":
/*!************************************!*\
  !*** ./components/Collapsible.tsx ***!
  \************************************/
/*! exports provided: Collapsible */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Collapsible\", function() { return Collapsible; });\n/* harmony import */ var _home_marcelo_Documents_i18n_language_codes_demo_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _home_marcelo_Documents_i18n_language_codes_demo_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties */ \"./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Separator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Separator */ \"./components/Separator.tsx\");\n\n\nvar _jsxFileName = \"/home/marcelo/Documents/i18n-language-codes/demo/components/Collapsible.tsx\";\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;\n\n\nfunction Collapsible(_ref) {\n  var children = _ref.children,\n      props = Object(_home_marcelo_Documents_i18n_language_codes_demo_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref, [\"children\"]);\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx(_Separator__WEBPACK_IMPORTED_MODULE_3__[\"Separator\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), __jsx(\"details\", Object(_home_marcelo_Documents_i18n_language_codes_demo_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), __jsx(\"summary\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Result\"), children));\n}\n_c = Collapsible;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collapsible\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9Db2xsYXBzaWJsZS50c3g/NTYxMSJdLCJuYW1lcyI6WyJDb2xsYXBzaWJsZSIsImNoaWxkcmVuIiwicHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQU1PLFNBQVNBLFdBQVQsT0FBK0Q7QUFBQSxNQUF4Q0MsUUFBd0MsUUFBeENBLFFBQXdDO0FBQUEsTUFBM0JDLEtBQTJCOztBQUNwRSxTQUNFLG1FQUNFLE1BQUMsb0RBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQURGLEVBRUUscUtBQWFBLEtBQWI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxNQUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0FERixFQUVHRCxRQUZILENBRkYsQ0FERjtBQVNEO0tBVmVELFciLCJmaWxlIjoiLi9jb21wb25lbnRzL0NvbGxhcHNpYmxlLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBEZXRhaWxzSFRNTEF0dHJpYnV0ZXMsIFJlYWN0Tm9kZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgU2VwYXJhdG9yIH0gZnJvbSBcIi4vU2VwYXJhdG9yXCI7XG5cbmludGVyZmFjZSBDb2xsYXBzaWJsZVByb3BzIGV4dGVuZHMgRGV0YWlsc0hUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PiB7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBDb2xsYXBzaWJsZSh7IGNoaWxkcmVuLCAuLi5wcm9wcyB9OiBDb2xsYXBzaWJsZVByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxTZXBhcmF0b3IgLz5cbiAgICAgIDxkZXRhaWxzIHsuLi5wcm9wc30+XG4gICAgICAgIDxzdW1tYXJ5PlJlc3VsdDwvc3VtbWFyeT5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kZXRhaWxzPlxuICAgIDwvPlxuICApO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Collapsible.tsx\n");

/***/ }),

/***/ "./components/Result.tsx":
/*!*******************************!*\
  !*** ./components/Result.tsx ***!
  \*******************************/
/*! exports provided: Result */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Result\", function() { return Result; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Separator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Separator */ \"./components/Separator.tsx\");\nvar _jsxFileName = \"/home/marcelo/Documents/i18n-language-codes/demo/components/Result.tsx\";\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\nfunction Result(_ref) {\n  var _ref$index = _ref.index,\n      index = _ref$index === void 0 ? 0 : _ref$index,\n      locale = _ref.locale;\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_0__[\"Fragment\"], {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, index > 0 && __jsx(_Separator__WEBPACK_IMPORTED_MODULE_1__[\"Separator\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Official language: \", locale.officialLanguage), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Native official language: \", locale.nativeOfficialLanguage), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Region: \", locale.region), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Native region: \", locale.nativeRegion), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"ISO 639-1: \", locale.ISO6391), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"ISO 639-2: \", locale.ISO6392), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"ISO 3166-1 alpha-2: \", locale.ISO31661Alpha2), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"ISO 3166-1 alpha-3: \", locale.ISO31661Alpha3), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"IETFL language tag: \", locale.IETFLanguageTag));\n}\n_c = Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9SZXN1bHQudHN4P2I4YzciXSwibmFtZXMiOlsiUmVzdWx0IiwiaW5kZXgiLCJsb2NhbGUiLCJvZmZpY2lhbExhbmd1YWdlIiwibmF0aXZlT2ZmaWNpYWxMYW5ndWFnZSIsInJlZ2lvbiIsIm5hdGl2ZVJlZ2lvbiIsIklTTzYzOTEiLCJJU082MzkyIiwiSVNPMzE2NjFBbHBoYTIiLCJJU08zMTY2MUFscGhhMyIsIklFVEZMYW5ndWFnZVRhZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBRUE7QUFPTyxTQUFTQSxNQUFULE9BQW9EO0FBQUEsd0JBQWxDQyxLQUFrQztBQUFBLE1BQWxDQSxLQUFrQywyQkFBMUIsQ0FBMEI7QUFBQSxNQUF2QkMsTUFBdUIsUUFBdkJBLE1BQXVCO0FBQ3pELFNBQ0UsTUFBQyw4Q0FBRDtBQUFVLE9BQUcsRUFBRUQsS0FBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0dBLEtBQUssR0FBRyxDQUFSLElBQWEsTUFBQyxvREFBRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBRGhCLEVBRUU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw0QkFBdUJDLE1BQU0sQ0FBQ0MsZ0JBQTlCLENBRkYsRUFHRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1DQUE4QkQsTUFBTSxDQUFDRSxzQkFBckMsQ0FIRixFQUlFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQVlGLE1BQU0sQ0FBQ0csTUFBbkIsQ0FKRixFQUtFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsd0JBQW1CSCxNQUFNLENBQUNJLFlBQTFCLENBTEYsRUFNRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG9CQUFlSixNQUFNLENBQUNLLE9BQXRCLENBTkYsRUFPRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG9CQUFlTCxNQUFNLENBQUNNLE9BQXRCLENBUEYsRUFRRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDZCQUF3Qk4sTUFBTSxDQUFDTyxjQUEvQixDQVJGLEVBU0U7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw2QkFBd0JQLE1BQU0sQ0FBQ1EsY0FBL0IsQ0FURixFQVVFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsNkJBQXdCUixNQUFNLENBQUNTLGVBQS9CLENBVkYsQ0FERjtBQWNEO0tBZmVYLE0iLCJmaWxlIjoiLi9jb21wb25lbnRzL1Jlc3VsdC50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IExvY2FsZSB9IGZyb20gXCJAbWFyY2Vsb3ZpY2VudGVnYy9pMThuLWlzby1sYW5ndWFnZXNcIjtcbmltcG9ydCB7IFNlcGFyYXRvciB9IGZyb20gXCIuL1NlcGFyYXRvclwiO1xuXG5pbnRlcmZhY2UgUmVzdWx0UHJvcHMge1xuICBpbmRleD86IG51bWJlcjtcbiAgbG9jYWxlOiBMb2NhbGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBSZXN1bHQoeyBpbmRleCA9IDAsIGxvY2FsZSB9OiBSZXN1bHRQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudCBrZXk9e2luZGV4fT5cbiAgICAgIHtpbmRleCA+IDAgJiYgPFNlcGFyYXRvciAvPn1cbiAgICAgIDxwPk9mZmljaWFsIGxhbmd1YWdlOiB7bG9jYWxlLm9mZmljaWFsTGFuZ3VhZ2V9PC9wPlxuICAgICAgPHA+TmF0aXZlIG9mZmljaWFsIGxhbmd1YWdlOiB7bG9jYWxlLm5hdGl2ZU9mZmljaWFsTGFuZ3VhZ2V9PC9wPlxuICAgICAgPHA+UmVnaW9uOiB7bG9jYWxlLnJlZ2lvbn08L3A+XG4gICAgICA8cD5OYXRpdmUgcmVnaW9uOiB7bG9jYWxlLm5hdGl2ZVJlZ2lvbn08L3A+XG4gICAgICA8cD5JU08gNjM5LTE6IHtsb2NhbGUuSVNPNjM5MX08L3A+XG4gICAgICA8cD5JU08gNjM5LTI6IHtsb2NhbGUuSVNPNjM5Mn08L3A+XG4gICAgICA8cD5JU08gMzE2Ni0xIGFscGhhLTI6IHtsb2NhbGUuSVNPMzE2NjFBbHBoYTJ9PC9wPlxuICAgICAgPHA+SVNPIDMxNjYtMSBhbHBoYS0zOiB7bG9jYWxlLklTTzMxNjYxQWxwaGEzfTwvcD5cbiAgICAgIDxwPklFVEZMIGxhbmd1YWdlIHRhZzoge2xvY2FsZS5JRVRGTGFuZ3VhZ2VUYWd9PC9wPlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Result.tsx\n");

/***/ }),

/***/ "./components/Separator.tsx":
/*!**********************************!*\
  !*** ./components/Separator.tsx ***!
  \**********************************/
/*! exports provided: Separator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Separator\", function() { return Separator; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _jsxFileName = \"/home/marcelo/Documents/i18n-language-codes/demo/components/Separator.tsx\";\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\nfunction Separator(_ref) {\n  var thick = _ref.thick;\n  return __jsx(\"div\", {\n    className: \"separator\",\n    style: {\n      height: thick ? 22 : 14,\n      width: \"100%\",\n      borderBottom: \"\".concat(thick ? 3 : 1, \"px solid #eaeaea\"),\n      marginBottom: thick ? 16 : 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  });\n}\n_c = Separator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Separator\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9TZXBhcmF0b3IudHN4PzFmYzEiXSwibmFtZXMiOlsiU2VwYXJhdG9yIiwidGhpY2siLCJoZWlnaHQiLCJ3aWR0aCIsImJvcmRlckJvdHRvbSIsIm1hcmdpbkJvdHRvbSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFNTyxTQUFTQSxTQUFULE9BQThDO0FBQUEsTUFBekJDLEtBQXlCLFFBQXpCQSxLQUF5QjtBQUNuRCxTQUNFO0FBQ0UsYUFBUyxFQUFDLFdBRFo7QUFFRSxTQUFLLEVBQUU7QUFDTEMsWUFBTSxFQUFFRCxLQUFLLEdBQUcsRUFBSCxHQUFRLEVBRGhCO0FBRUxFLFdBQUssRUFBRSxNQUZGO0FBR0xDLGtCQUFZLFlBQUtILEtBQUssR0FBRyxDQUFILEdBQU8sQ0FBakIscUJBSFA7QUFJTEksa0JBQVksRUFBRUosS0FBSyxHQUFHLEVBQUgsR0FBUTtBQUp0QixLQUZUO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFERjtBQVdEO0tBWmVELFMiLCJmaWxlIjoiLi9jb21wb25lbnRzL1NlcGFyYXRvci50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmludGVyZmFjZSBTZXBhcmF0b3JQcm9wcyB7XG4gIHRoaWNrPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFNlcGFyYXRvcih7IHRoaWNrIH06IFNlcGFyYXRvclByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPVwic2VwYXJhdG9yXCJcbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIGhlaWdodDogdGhpY2sgPyAyMiA6IDE0LFxuICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgIGJvcmRlckJvdHRvbTogYCR7dGhpY2sgPyAzIDogMX1weCBzb2xpZCAjZWFlYWVhYCxcbiAgICAgICAgbWFyZ2luQm90dG9tOiB0aGljayA/IDE2IDogMTIsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Separator.tsx\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Home; });\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-select */ \"./node_modules/react-select/dist/react-select.browser.esm.js\");\n/* harmony import */ var _components_CodeBlock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/CodeBlock */ \"./components/CodeBlock.tsx\");\n/* harmony import */ var _marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @marcelovicentegc/i18n-iso-languages */ \"./node_modules/@marcelovicentegc/i18n-iso-languages/dist/index.js\");\n/* harmony import */ var _marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-toastify */ \"./node_modules/react-toastify/dist/react-toastify.esm.js\");\n/* harmony import */ var _components_Card__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/Card */ \"./components/Card.tsx\");\n/* harmony import */ var _components_Input__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/Input */ \"./components/Input.tsx\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-toastify/dist/ReactToastify.css */ \"./node_modules/react-toastify/dist/ReactToastify.css\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_9__);\nvar _jsxFileName = \"/home/marcelo/Documents/i18n-language-codes/demo/pages/index.tsx\",\n    _s = $RefreshSig$();\n\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\n\n\n\n\n\n\n\n\n\n\nvar configure = function configure(options) {\n  Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"configure\"])(options);\n};\n\nvar defaultLookupKey = \"IETFLanguageTag\";\nvar defaultLocales = [\"pt-BR\", \"en-US\", \"zh-CN\", \"es-MX\", \"hi-IN\"];\nvar localesConfigPlaceholder = [{\n  localesSubset: {\n    lookupKey: defaultLookupKey,\n    locales: defaultLocales\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO31661Alpha2\",\n    locales: [\"PT\", \"US\", \"CH\", \"MX\", \"IN\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO31661Alpha3\",\n    locales: [\"BRA\", \"USA\", \"CHN\", \"MEX\", \"IND\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO6391\",\n    locales: [\"pt\", \"en\", \"zh\", \"es\", \"hi\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO6392\",\n    locales: [\"por\", \"eng\", \"zho\", \"spa\", \"hin\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"officialLanguage\",\n    locales: [\"Portuguese\", \"English\", \"Chinese\", \"Spanish\", \"Hindi\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"nativeOfficialLanguage\",\n    locales: [\"Português\", \"English\", \"中文\", \"Español\", \"हिन्दी\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"region\",\n    locales: [\"Brazil\", \"United Kingdom\", \"China\", \"Mexico\", \"India\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"nativeRegion\",\n    locales: [\"Brasil\", \"United Kingdom\", \"中华人民共和国\", \"México\", \"भारत गणराज्य\"]\n  }\n}];\nvar defaultSingleLocaleByLanguageTagQuery = \"hi-IN\";\nvar defaultMultipleLocalesByLanguageTagQuery = [\"en-US\", \"es-MX\"];\nvar defaultSingleLocaleByOfficialLanguageQuery = \"Portuguese\";\nvar defaultMultipleLocalesByOfficialLanguageQuery = [\"Portuguese\", \"Spanish\"];\nvar defaultSingleLocaleByRegionQuery = \"United States\";\nvar defaultMultipleLocalesByRegionQuery = [\"Brazil\", \"China\", \"United States\"];\nconfigure({\n  localesSubset: {\n    lookupKey: defaultLookupKey,\n    locales: defaultLocales\n  }\n});\nfunction Home() {\n  _s();\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(\"IETFLanguageTag\"),\n      demoLookupKey = _useState[0],\n      setDemoLookupKey = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultLocales),\n      demoLocales = _useState2[0],\n      setDemoLocales = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displayGetLocalesResult = _useState3[0],\n      setDisplayGetLocalesResult = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displaySingleLocaleByLanguageTagResult = _useState4[0],\n      setDisplaySingleLocaleByLanguageTagResult = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displayMultipleLocalesByLanguageTagResult = _useState5[0],\n      setDisplayMultipleLocalesByLanguageTagResult = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displaySingleLocaleByOfficialLanguageResult = _useState6[0],\n      setDisplaySingleLocaleByOfficialLanguageResult = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displayMultipleLocalesByOfficialLanguageResult = _useState7[0],\n      setDisplayMultipleLocalesByOfficialLanguageResult = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displaySingleLocaleByRegionResult = _useState8[0],\n      setDisplaySingleLocaleByRegionResult = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displayMultipleLocalesByRegionResult = _useState9[0],\n      setDisplayMultipleLocalesByRegionResult = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(localesConfigPlaceholder[0]),\n      demoLocalesPlaceholder = _useState10[0],\n      setDemoLocalesPlaceholder = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n      localesByGetLocales = _useState11[0],\n      setLocalesByGetLocales = _useState11[1];\n\n  var _useState12 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultMultipleLocalesByLanguageTagQuery),\n      multipleLocalesByLanguageTagQuery = _useState12[0],\n      setMultipleLocalesByLanguageTagQuery = _useState12[1];\n\n  var _useState13 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultSingleLocaleByLanguageTagQuery),\n      singleLocaleByLanguageTagQuery = _useState13[0],\n      setSingleLocaleByLanguageTagQuery = _useState13[1];\n\n  var _useState14 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(),\n      singleLocaleByLanguageTag = _useState14[0],\n      setSingleLocaleByLanguageTag = _useState14[1];\n\n  var _useState15 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n      multipleLocalesByLanguageTag = _useState15[0],\n      setMultipleLocalesByLanguageTag = _useState15[1];\n\n  var _useState16 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultMultipleLocalesByOfficialLanguageQuery),\n      multipleLocalesByOfficialLanguageQuery = _useState16[0],\n      setMultipleLocalesByOfficialLanguageQuery = _useState16[1];\n\n  var _useState17 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultSingleLocaleByOfficialLanguageQuery),\n      singleLocaleByOfficialLanguageQuery = _useState17[0],\n      setSingleLocaleByOfficialLanguageQuery = _useState17[1];\n\n  var _useState18 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(),\n      singleLocaleByOfficialLanguage = _useState18[0],\n      setSingleLocaleByOfficialLanguage = _useState18[1];\n\n  var _useState19 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n      multipleLocalesByOfficialLanguage = _useState19[0],\n      setMultipleLocalesByOfficialLanguage = _useState19[1];\n\n  var _useState20 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultMultipleLocalesByRegionQuery),\n      multipleLocalesByRegionQuery = _useState20[0],\n      setMultipleLocalesByRegionQuery = _useState20[1];\n\n  var _useState21 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultSingleLocaleByRegionQuery),\n      singleLocaleByRegionQuery = _useState21[0],\n      setSingleLocaleByRegionQuery = _useState21[1];\n\n  var _useState22 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(),\n      singleLocaleByRegion = _useState22[0],\n      setSingleLocaleByRegion = _useState22[1];\n\n  var _useState23 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n      multipleLocalesByRegion = _useState23[0],\n      setMultipleLocalesByRegion = _useState23[1];\n\n  var options = [{\n    value: \"IETFLanguageTag\",\n    label: \"IETF language tag\"\n  }, {\n    value: \"ISO31661Alpha2\",\n    label: \"ISO 3166-1 alpha-2\"\n  }, {\n    value: \"ISO31661Alpha3\",\n    label: \"ISO 3166-1 alpha-3\"\n  }, {\n    value: \"ISO6391\",\n    label: \"ISO 639-1\"\n  }, {\n    value: \"ISO6392\",\n    label: \"ISO 639-2\"\n  }, {\n    value: \"nativeOfficialLanguage\",\n    label: \"Native official language\"\n  }, {\n    value: \"nativeRegion\",\n    label: \"Native region\"\n  }, {\n    value: \"officialLanguage\",\n    label: \"Official language\"\n  }, {\n    value: \"region\",\n    label: \"Region\"\n  }];\n\n  var handleSelectOnChange = function handleSelectOnChange(value) {\n    setDemoLookupKey(value);\n    var config = localesConfigPlaceholder.find(function (conf) {\n      return conf.localesSubset.lookupKey === value;\n    });\n    setDemoLocales(config.localesSubset.locales);\n    setDemoLocalesPlaceholder(config);\n  };\n\n  var handleDemoLocales = function handleDemoLocales(value) {\n    return setDemoLocales(value);\n  };\n\n  var notifyOnConfigure = function notifyOnConfigure() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocales\"])();\n    Object(react_toastify__WEBPACK_IMPORTED_MODULE_6__[\"toast\"])(\"Configured locales subset with \".concat(locales.length, \" locale object\").concat(locales.length > 1 ? \"s\" : \"\", \"!\"), {\n      type: \"success\"\n    });\n  };\n\n  var handleOnConfigure = function handleOnConfigure() {\n    configure({\n      localesSubset: {\n        lookupKey: demoLookupKey,\n        locales: demoLocales\n      }\n    });\n    notifyOnConfigure();\n  };\n\n  var handleGetLocales = function handleGetLocales() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocales\"])();\n    setLocalesByGetLocales(locales);\n    setDisplayGetLocalesResult(true);\n  };\n\n  var handleSingleLocaleByLanguageTag = function handleSingleLocaleByLanguageTag() {\n    var locale = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocaleByIETFLanguageTag\"])(singleLocaleByLanguageTagQuery);\n    setSingleLocaleByLanguageTag(locale);\n    setDisplaySingleLocaleByLanguageTagResult(true);\n  };\n\n  var handleMultipleLocalesByLanguageTag = function handleMultipleLocalesByLanguageTag() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocaleByIETFLanguageTag\"])(multipleLocalesByLanguageTagQuery);\n    setMultipleLocalesByLanguageTag(locales);\n    setDisplayMultipleLocalesByLanguageTagResult(true);\n  };\n\n  var handleSingleLocaleByOfficialLanguage = function handleSingleLocaleByOfficialLanguage() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocalesByOfficialLanguage\"])(singleLocaleByOfficialLanguageQuery);\n    setSingleLocaleByOfficialLanguage(locales);\n    setDisplaySingleLocaleByOfficialLanguageResult(true);\n  };\n\n  var handleMultipleLocalesByOfficialLanguage = function handleMultipleLocalesByOfficialLanguage() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocalesByOfficialLanguage\"])(multipleLocalesByOfficialLanguageQuery);\n    setMultipleLocalesByOfficialLanguage(locales);\n    setDisplayMultipleLocalesByOfficialLanguageResult(true);\n  };\n\n  var handleSingleLocaleByRegion = function handleSingleLocaleByRegion() {\n    var locale = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocaleByRegion\"])(singleLocaleByRegionQuery);\n    setSingleLocaleByRegion(locale);\n    setDisplaySingleLocaleByRegionResult(true);\n  };\n\n  var handleMultipleLocalesByRegion = function handleMultipleLocalesByRegion() {\n    var locale = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocaleByRegion\"])(multipleLocalesByRegionQuery);\n    setMultipleLocalesByRegion(locale);\n    setDisplayMultipleLocalesByRegionResult(true);\n  };\n\n  var configureCode = \"\\nimport { configure } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconfigure({\\n  localesSubset: {\\n    lookupKey: '\".concat(demoLookupKey, \"',\\n    locales: [\").concat(demoLocales.map(function (locale) {\n    return \"'\".concat(locale, \"'\");\n  }), \"],\\n  },\\n})\\n\");\n  var getLocalesCode = \"\\nimport { getLocales } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locales = getLocales()\\n  \\nlocales.map((locale) => {\\n  return (\\n    <>\\n    <Separator />\\n    <p>Official language: {locale.officialLanguage}</p>\\n    <p>\\n      Native official language: {locale.nativeOfficialLanguage}\\n    </p>\\n    <p>Region: {locale.region}</p>\\n    <p>Native region: {locale.nativeRegion}</p>\\n    <p>ISO 639-1: {locale.ISO6391}</p>\\n    <p>ISO 639-2: {locale.ISO6392}</p>\\n    <p>ISO 3166-1 alpha-2: {locale.ISO31661Alpha2}</p>\\n    <p>ISO 3166-1 alpha-3: {locale.ISO31661Alpha3}</p>\\n    <p>IETFL language tag: {locale.IETFLanguageTag}</p>\\n    </>\\n  );\\n})\\n\\n\";\n  var singleLocaleByLanguageTagCode = \"\\nimport { getLocaleByIETFLanguageTag, Locale } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locale = getLocaleByIETFLanguageTag('\".concat(singleLocaleByLanguageTagQuery, \"') as Locale\\n                \");\n  var multipleLocalesByLanguageTagCode = \"\\nimport { getLocaleByIETFLanguageTag, Locale } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locales = getLocaleByIETFLanguageTag([\".concat(multipleLocalesByLanguageTagQuery.map(function (locale) {\n    return \"'\".concat(locale, \"'\");\n  }), \"]) as Locale[]\");\n  var singleLocaleByOfficialLanguageCode = \"\\nimport { getLocalesByOfficialLanguage } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locales = getLocalesByOfficialLanguage('\".concat(singleLocaleByOfficialLanguageQuery, \"')\\n                \");\n  var multipleLocalesByOfficialLanguageCode = \"\\nimport { getLocalesByOfficialLanguage } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locales = getLocalesByOfficialLanguage([\".concat(multipleLocalesByOfficialLanguageQuery.map(function (locale) {\n    return \"'\".concat(locale, \"'\");\n  }), \"])\");\n  var singleLocaleByRegionCode = \"\\nimport { getLocaleByRegion } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locales = getLocaleByRegion('\".concat(singleLocaleByRegionQuery, \"')\\n                \");\n  var multipleLocalesByRegionCode = \"\\nimport { getLocaleByRegion, Locale } from '@marcelovicentegc/i18n-iso-languages'\\n                  \\nconst locales = getLocaleByRegion([\".concat(multipleLocalesByRegionQuery.map(function (locale) {\n    return \"'\".concat(locale, \"'\");\n  }), \"])\");\n  return __jsx(\"div\", {\n    className: \"jsx-2411788270\" + \" \" + \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 5\n    }\n  }, __jsx(next_head__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }, \"i18n-iso-languages\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-2411788270\" + \" \" + \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, \"i18n-iso-languages\"), __jsx(\"p\", {\n    className: \"jsx-2411788270\" + \" \" + \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }, \"Get started by adding it to your project \"), __jsx(\"div\", {\n    className: \"jsx-2411788270\" + \" \" + \"codeBlockContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }, __jsx(_components_CodeBlock__WEBPACK_IMPORTED_MODULE_4__[\"CodeBlock\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, \"yarn add @marcelovicentegc/i18n-iso-languages \", __jsx(\"br\", {\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 59\n    }\n  }), \"npm i @marcelovicentegc/i18n-iso-language\")), __jsx(\"div\", {\n    className: \"jsx-2411788270\" + \" \" + \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }\n  }, __jsx(_components_Card__WEBPACK_IMPORTED_MODULE_7__[\"Card\"], {\n    title: \"configure\",\n    sections: [{\n      code: configureCode,\n      onClick: handleOnConfigure,\n      inputs: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }\n      }, \"lookup key\"), __jsx(react_select__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        options: options,\n        defaultValue: options[0],\n        onChange: function onChange(option) {\n          handleSelectOnChange(option.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }\n      }), __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }\n      }, \"locales\"), __jsx(_components_Input__WEBPACK_IMPORTED_MODULE_8__[\"Input\"], {\n        placeholder: demoLocalesPlaceholder.localesSubset.locales.join(\",\"),\n        value: demoLocales.join(),\n        onChange: function onChange(event) {\n          return handleDemoLocales(event.target.value.split(\",\"));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }\n      }))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }), __jsx(_components_Card__WEBPACK_IMPORTED_MODULE_7__[\"Card\"], {\n    title: \"getLocales\",\n    sections: [{\n      code: getLocalesCode,\n      onClick: handleGetLocales,\n      results: {\n        data: localesByGetLocales,\n        display: displayGetLocalesResult,\n        onToggle: function onToggle(event) {\n          event.preventDefault();\n          setDisplayGetLocalesResult(!displayGetLocalesResult);\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 11\n    }\n  }), __jsx(_components_Card__WEBPACK_IMPORTED_MODULE_7__[\"Card\"], {\n    title: \"getLocaleByIETFLanguageTag\",\n    sections: [{\n      inputs: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 21\n        }\n      }, \"You can get a single locale by language tag by providing a single language tag...\"), __jsx(_components_Input__WEBPACK_IMPORTED_MODULE_8__[\"Input\"], {\n        placeholder: defaultSingleLocaleByLanguageTagQuery,\n        value: singleLocaleByLanguageTagQuery,\n        onChange: function onChange(event) {\n          setSingleLocaleByLanguageTagQuery(event.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 21\n        }\n      })),\n      code: singleLocaleByLanguageTagCode,\n      onClick: handleSingleLocaleByLanguageTag,\n      results: {\n        data: singleLocaleByLanguageTag,\n        display: displaySingleLocaleByLanguageTagResult,\n        onToggle: function onToggle(event) {\n          event.preventDefault();\n          setDisplaySingleLocaleByLanguageTagResult(!displaySingleLocaleByLanguageTagResult);\n        }\n      }\n    }, {\n      inputs: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }\n      }, \"Or you can get multiple by providing multiple language tags!\"), __jsx(_components_Input__WEBPACK_IMPORTED_MODULE_8__[\"Input\"], {\n        placeholder: defaultMultipleLocalesByLanguageTagQuery.join(\",\"),\n        value: multipleLocalesByLanguageTagQuery.join(),\n        onChange: function onChange(event) {\n          setMultipleLocalesByLanguageTagQuery(event.target.value.split(\",\"));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }\n      })),\n      code: multipleLocalesByLanguageTagCode,\n      onClick: handleMultipleLocalesByLanguageTag,\n      results: {\n        data: multipleLocalesByLanguageTag,\n        display: displayMultipleLocalesByLanguageTagResult,\n        onToggle: function onToggle(event) {\n          event.preventDefault();\n          setDisplayMultipleLocalesByLanguageTagResult(!displayMultipleLocalesByLanguageTagResult);\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }), __jsx(_components_Card__WEBPACK_IMPORTED_MODULE_7__[\"Card\"], {\n    title: \"getLocalesByOfficialLanguage\",\n    sections: [{\n      inputs: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 21\n        }\n      }, \"You can get multiple locales by official language by providing a single official language...\"), __jsx(_components_Input__WEBPACK_IMPORTED_MODULE_8__[\"Input\"], {\n        placeholder: defaultSingleLocaleByOfficialLanguageQuery,\n        value: singleLocaleByOfficialLanguageQuery,\n        onChange: function onChange(event) {\n          setSingleLocaleByOfficialLanguageQuery(event.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 21\n        }\n      })),\n      code: singleLocaleByOfficialLanguageCode,\n      onClick: handleSingleLocaleByOfficialLanguage,\n      results: {\n        data: singleLocaleByOfficialLanguage,\n        display: displaySingleLocaleByOfficialLanguageResult,\n        onToggle: function onToggle(event) {\n          event.preventDefault();\n          setDisplaySingleLocaleByOfficialLanguageResult(!displaySingleLocaleByOfficialLanguageResult);\n        }\n      }\n    }, {\n      inputs: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 21\n        }\n      }, \"Or you can get multiple by providing multiple official languages!\"), __jsx(_components_Input__WEBPACK_IMPORTED_MODULE_8__[\"Input\"], {\n        placeholder: defaultMultipleLocalesByOfficialLanguageQuery.join(\",\"),\n        value: multipleLocalesByOfficialLanguageQuery.join(),\n        onChange: function onChange(event) {\n          setMultipleLocalesByOfficialLanguageQuery(event.target.value.split(\",\"));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 21\n        }\n      })),\n      code: multipleLocalesByOfficialLanguageCode,\n      onClick: handleMultipleLocalesByOfficialLanguage,\n      results: {\n        data: multipleLocalesByOfficialLanguage,\n        display: displayMultipleLocalesByOfficialLanguageResult,\n        onToggle: function onToggle(event) {\n          event.preventDefault();\n          setDisplayMultipleLocalesByOfficialLanguageResult(!displayMultipleLocalesByOfficialLanguageResult);\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 11\n    }\n  }), __jsx(_components_Card__WEBPACK_IMPORTED_MODULE_7__[\"Card\"], {\n    title: \"getLocaleByRegion\",\n    sections: [{\n      inputs: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 21\n        }\n      }, \"You can get multiple locales by region by providing a single region...\"), __jsx(_components_Input__WEBPACK_IMPORTED_MODULE_8__[\"Input\"], {\n        placeholder: defaultSingleLocaleByRegionQuery,\n        value: singleLocaleByRegionQuery,\n        onChange: function onChange(event) {\n          setSingleLocaleByRegionQuery(event.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 21\n        }\n      })),\n      code: singleLocaleByRegionCode,\n      onClick: handleSingleLocaleByRegion,\n      results: {\n        data: singleLocaleByRegion,\n        display: displaySingleLocaleByRegionResult,\n        onToggle: function onToggle(event) {\n          event.preventDefault();\n          setDisplaySingleLocaleByRegionResult(!displaySingleLocaleByRegionResult);\n        }\n      }\n    }, {\n      inputs: __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx(\"h4\", {\n        className: \"jsx-2411788270\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 21\n        }\n      }, \"Or you can get multiple by providing multiple regions!\"), __jsx(_components_Input__WEBPACK_IMPORTED_MODULE_8__[\"Input\"], {\n        placeholder: defaultMultipleLocalesByRegionQuery.join(\",\"),\n        value: multipleLocalesByRegionQuery.join(),\n        onChange: function onChange(event) {\n          setMultipleLocalesByRegionQuery(event.target.value.split(\",\"));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 21\n        }\n      })),\n      code: multipleLocalesByRegionCode,\n      onClick: handleMultipleLocalesByRegion,\n      results: {\n        data: multipleLocalesByRegion,\n        display: displayMultipleLocalesByRegionResult,\n        onToggle: function onToggle(event) {\n          event.preventDefault();\n          setDisplayMultipleLocalesByRegionResult(!displayMultipleLocalesByRegionResult);\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 11\n    }\n  }))), __jsx(\"footer\", {\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/marcelovicentegc/i18n-iso-languages\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"jsx-2411788270\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 9\n    }\n  }, \"Brought to you with \\u2764\\uFE0F by Marcelo Cardoso\")), __jsx(react_toastify__WEBPACK_IMPORTED_MODULE_6__[\"ToastContainer\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }\n  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"3625174485\",\n    __self: this\n  }, \".container.jsx-2411788270{min-height:100vh;padding:0 0.5rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}main.jsx-2411788270{padding:5rem 0;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}footer.jsx-2411788270{width:100%;height:100px;border-top:1px solid #eaeaea;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}footer.jsx-2411788270 img.jsx-2411788270{margin-left:0.5rem;}footer.jsx-2411788270 a.jsx-2411788270{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}a.jsx-2411788270{color:inherit;-webkit-text-decoration:none;text-decoration:none;}.title.jsx-2411788270 a.jsx-2411788270{color:#0070f3;-webkit-text-decoration:none;text-decoration:none;}.title.jsx-2411788270 a.jsx-2411788270:hover,.title.jsx-2411788270 a.jsx-2411788270:focus,.title.jsx-2411788270 a.jsx-2411788270:active{-webkit-text-decoration:underline;text-decoration:underline;}.title.jsx-2411788270{margin:0;line-height:1.15;font-size:4rem;}.title.jsx-2411788270,.description.jsx-2411788270{text-align:center;}.description.jsx-2411788270{line-height:1.5;font-size:1.5rem;}.grid.jsx-2411788270{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;max-width:1260px;margin-top:3rem;}.codeBlockContainer.jsx-2411788270{max-width:calc(100vw - 2.5rem);}.logo.jsx-2411788270{height:1em;}@media (max-width:600px){.grid.jsx-2411788270{width:calc(100vw - 2.5rem);-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.title.jsx-2411788270{font-size:3rem;}.description.jsx-2411788270{font-size:1rem;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/home/marcelo/Documents/i18n-language-codes/demo/pages/index.tsx */\"), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"1712543154\",\n    __self: this\n  }, \"html,body{--scrollbarBG:#fff;--thumbBG:#000;--blue:#2684ff;-webkit-scrollbar-width:thin;-moz-scrollbar-width:thin;-ms-scrollbar-width:thin;scrollbar-width:thin;-webkit-scrollbar-color:var(--thumbBG) var(--scrollbarBG);-moz-scrollbar-color:var(--thumbBG) var(--scrollbarBG);-ms-scrollbar-color:var(--thumbBG) var(--scrollbarBG);scrollbar-color:var(--thumbBG) var(--scrollbarBG);padding:0;margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto, Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue, sans-serif;}*{box-sizing:border-box;}html::-webkit-scrollbar-thumb{background-color:var(--thumbBG);border-radius:6px;border:3px solid var(--scrollbarBG);}html::-webkit-scrollbar-track{background:var(--scrollbarBG);}html::-webkit-scrollbar{width:11px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/home/marcelo/Documents/i18n-language-codes/demo/pages/index.tsx */\"));\n}\n\n_s(Home, \"O6UplFjuQ0NvdEJU5i26sHfrkww=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ })

})