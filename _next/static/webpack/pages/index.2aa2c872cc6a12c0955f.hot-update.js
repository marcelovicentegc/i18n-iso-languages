webpackHotUpdate_N_E("pages/index",{

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Home; });\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-select */ \"./node_modules/react-select/dist/react-select.browser.esm.js\");\n/* harmony import */ var _components_CodeBlock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/CodeBlock */ \"./components/CodeBlock.tsx\");\n/* harmony import */ var _marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @marcelovicentegc/i18n-iso-languages */ \"./node_modules/@marcelovicentegc/i18n-iso-languages/dist/index.js\");\n/* harmony import */ var _marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _components_Result__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/Result */ \"./components/Result.tsx\");\n/* harmony import */ var _components_Collapsible__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/Collapsible */ \"./components/Collapsible.tsx\");\n/* harmony import */ var _components_Separator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/Separator */ \"./components/Separator.tsx\");\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-toastify */ \"./node_modules/react-toastify/dist/react-toastify.esm.js\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-toastify/dist/ReactToastify.css */ \"./node_modules/react-toastify/dist/ReactToastify.css\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_10__);\nvar _jsxFileName = \"/home/marcelo/Documents/i18n-language-codes/demo/pages/index.tsx\",\n    _s = $RefreshSig$();\n\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\n\n\n\n\n\n\n\n\n\n\n\nvar configure = function configure(options) {\n  Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"configure\"])(options);\n};\n\nvar defaultLookupKey = \"IETFLanguageTag\";\nvar defaultLocales = [\"pt-BR\", \"en-US\", \"zh-CN\", \"es-MX\", \"hi-IN\"];\nvar localesConfigPlaceholder = [{\n  localesSubset: {\n    lookupKey: defaultLookupKey,\n    locales: defaultLocales\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO31661Alpha2\",\n    locales: [\"PT\", \"US\", \"CH\", \"MX\", \"IN\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO31661Alpha3\",\n    locales: [\"BRA\", \"USA\", \"CHN\", \"MEX\", \"IND\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO6391\",\n    locales: [\"pt\", \"en\", \"zh\", \"es\", \"hi\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"ISO6392\",\n    locales: [\"por\", \"eng\", \"zho\", \"spa\", \"hin\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"officialLanguage\",\n    locales: [\"Portuguese\", \"English\", \"Chinese\", \"Spanish\", \"Hindi\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"nativeOfficialLanguage\",\n    locales: [\"Português\", \"English\", \"中文\", \"Español\", \"हिन्दी\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"region\",\n    locales: [\"Brazil\", \"United Kingdom\", \"China\", \"Mexico\", \"India\"]\n  }\n}, {\n  localesSubset: {\n    lookupKey: \"nativeRegion\",\n    locales: [\"Brasil\", \"United Kingdom\", \"中华人民共和国\", \"México\", \"भारत गणराज्य\"]\n  }\n}];\nvar defaultMultipleLocalesByLanguageTagQuery = [\"en-US\", \"es-MX\"];\nvar defaultSingleLocaleByLanguageTagQuery = \"hi-IN\";\nvar buttonLabel = \"Run the code above ☝️\";\nconfigure({\n  localesSubset: {\n    lookupKey: defaultLookupKey,\n    locales: defaultLocales\n  }\n});\nfunction Home() {\n  _s();\n\n  var _this = this;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(\"IETFLanguageTag\"),\n      demoLookupKey = _useState[0],\n      setDemoLookupKey = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultLocales),\n      demoLocales = _useState2[0],\n      setDemoLocales = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displayGetLocalesResult = _useState3[0],\n      setDisplayGetLocalesResult = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displaySingleLocaleByLanguageTagResult = _useState4[0],\n      setDisplaySingleLocaleByLanguageTagResult = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false),\n      displayMultipleLocalesByLanguageTagResult = _useState5[0],\n      setDisplayMultipleLocalesByLanguageTagResult = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(localesConfigPlaceholder[0]),\n      demoLocalesPlaceholder = _useState6[0],\n      setDemoLocalesPlaceholder = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultMultipleLocalesByLanguageTagQuery),\n      multipleLocalesByLanguageTagQuery = _useState7[0],\n      setMultipleLocalesByLanguageTagQuery = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(defaultSingleLocaleByLanguageTagQuery),\n      singleLocaleByLanguageTagQuery = _useState8[0],\n      setSingleLocaleByLanguageTagQuery = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(),\n      singleLocaleByLanguageTag = _useState9[0],\n      setSingleLocaleByLanguageTag = _useState9[1];\n\n  var _useState10 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n      multipleLocalesByLanguageTag = _useState10[0],\n      setMultipleLocalesByLanguageTag = _useState10[1];\n\n  var _useState11 = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])([]),\n      localesByGetLocales = _useState11[0],\n      setLocalesByGetLocales = _useState11[1];\n\n  var options = [{\n    value: \"IETFLanguageTag\",\n    label: \"IETF language tag\"\n  }, {\n    value: \"ISO31661Alpha2\",\n    label: \"ISO 3166-1 alpha-2\"\n  }, {\n    value: \"ISO31661Alpha3\",\n    label: \"ISO 3166-1 alpha-3\"\n  }, {\n    value: \"ISO6391\",\n    label: \"ISO 639-1\"\n  }, {\n    value: \"ISO6392\",\n    label: \"ISO 639-2\"\n  }, {\n    value: \"nativeOfficialLanguage\",\n    label: \"Native official language\"\n  }, {\n    value: \"nativeRegion\",\n    label: \"Native region\"\n  }, {\n    value: \"officialLanguage\",\n    label: \"Official language\"\n  }, {\n    value: \"region\",\n    label: \"Region\"\n  }];\n\n  var handleSelectOnChange = function handleSelectOnChange(value) {\n    setDemoLookupKey(value);\n    var config = localesConfigPlaceholder.find(function (conf) {\n      return conf.localesSubset.lookupKey === value;\n    });\n    setDemoLocales(config.localesSubset.locales);\n    setDemoLocalesPlaceholder(config);\n  };\n\n  var handleDemoLocales = function handleDemoLocales(value) {\n    return setDemoLocales(value);\n  };\n\n  var notifyOnConfigure = function notifyOnConfigure() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocales\"])();\n    Object(react_toastify__WEBPACK_IMPORTED_MODULE_9__[\"toast\"])(\"Configured locales subset with \".concat(locales.length, \" locale object\").concat(locales.length > 1 ? \"s\" : \"\", \"!\"), {\n      type: \"success\"\n    });\n  };\n\n  var handleOnConfigure = function handleOnConfigure() {\n    configure({\n      localesSubset: {\n        lookupKey: demoLookupKey,\n        locales: demoLocales\n      }\n    });\n    notifyOnConfigure();\n  };\n\n  var handleGetLocales = function handleGetLocales() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocales\"])();\n    setLocalesByGetLocales(locales);\n    setDisplayGetLocalesResult(true);\n  };\n\n  var handleSingleLocaleByLanguageTag = function handleSingleLocaleByLanguageTag() {\n    var locale = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocaleByIETFLanguageTag\"])(singleLocaleByLanguageTagQuery);\n    setSingleLocaleByLanguageTag(locale);\n    setDisplaySingleLocaleByLanguageTagResult(true);\n  };\n\n  var handleMultipleLocalesByLanguageTag = function handleMultipleLocalesByLanguageTag() {\n    var locales = Object(_marcelovicentegc_i18n_iso_languages__WEBPACK_IMPORTED_MODULE_5__[\"getLocaleByIETFLanguageTag\"])(multipleLocalesByLanguageTagQuery);\n    setMultipleLocalesByLanguageTag(locales);\n    setDisplayMultipleLocalesByLanguageTagResult(true);\n  };\n\n  var configureCode = \"\\nimport { configure } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconfigure({\\n  localesSubset: {\\n    lookupKey: '\".concat(demoLookupKey, \"',\\n    locales: [\").concat(demoLocales.map(function (locale) {\n    return \"'\".concat(locale, \"'\");\n  }), \"],\\n  },\\n})\\n\");\n  var getLocalesCode = \"\\nimport { getLocales } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locales = getLocales()\\n  \\nlocales.map((locale) => {\\n  return (\\n    <>\\n    <Separator />\\n    <p>Official language: {locale.officialLanguage}</p>\\n    <p>\\n      Native official language: {locale.nativeOfficialLanguage}\\n    </p>\\n    <p>Region: {locale.region}</p>\\n    <p>Native region: {locale.nativeRegion}</p>\\n    <p>ISO 639-1: {locale.ISO6391}</p>\\n    <p>ISO 3166-1 alpha-2: {locale.ISO31661Alpha2}</p>\\n    <p>ISO 3166-1 alpha-3: {locale.ISO31661Alpha3}</p>\\n    <p>IETFL language tag: {locale.IETFLanguageTag}</p>\\n    </>\\n  );\\n})\\n\\n\";\n  var singleLocaleByLanguageTagCode = \"\\nimport { getLocaleByIETFLanguageTag, Locale } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locale = getLocaleByIETFLanguageTag('\".concat(singleLocaleByLanguageTagQuery, \"') as Locale\\n                \");\n  var multipleLocalesCode = \"\\nimport { getLocaleByIETFLanguageTag, Locale } from '@marcelovicentegc/i18n-iso-languages'\\n                \\nconst locales = getLocaleByIETFLanguageTag([\".concat(multipleLocalesByLanguageTagQuery.map(function (locale) {\n    return \"'\".concat(locale, \"'\");\n  }), \"]) as Locale[]\");\n  return __jsx(\"div\", {\n    className: \"jsx-3162003166\" + \" \" + \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }\n  }, __jsx(next_head__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, \"i18n-iso-languages\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-3162003166\" + \" \" + \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, \"i18n-iso-languages\"), __jsx(\"p\", {\n    className: \"jsx-3162003166\" + \" \" + \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, \"Get started by adding it to your project \"), __jsx(\"div\", {\n    className: \"jsx-3162003166\" + \" \" + \"codeBlockContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, __jsx(_components_CodeBlock__WEBPACK_IMPORTED_MODULE_4__[\"CodeBlock\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, \"yarn add @marcelovicentegc/i18n-iso-languages \", __jsx(\"br\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 59\n    }\n  }), \"npm i @marcelovicentegc/i18n-iso-language\")), __jsx(\"div\", {\n    className: \"jsx-3162003166\" + \" \" + \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3162003166\" + \" \" + \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, \"configure\"), __jsx(\"h4\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, \"lookup key\"), __jsx(react_select__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    options: options,\n    defaultValue: options[0],\n    onChange: function onChange(option) {\n      handleSelectOnChange(option.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }), __jsx(\"h4\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }, \"locales\"), __jsx(\"input\", {\n    placeholder: demoLocalesPlaceholder.localesSubset.locales.join(\",\"),\n    value: demoLocales.join(),\n    onChange: function onChange(event) {\n      return handleDemoLocales(event.target.value.split(\",\"));\n    },\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }), __jsx(_components_Separator__WEBPACK_IMPORTED_MODULE_8__[\"Separator\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }), __jsx(_components_CodeBlock__WEBPACK_IMPORTED_MODULE_4__[\"CodeBlock\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, configureCode), __jsx(\"button\", {\n    onClick: handleOnConfigure,\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, buttonLabel)), __jsx(\"div\", {\n    className: \"jsx-3162003166\" + \" \" + \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, \"getLocales\"), __jsx(_components_CodeBlock__WEBPACK_IMPORTED_MODULE_4__[\"CodeBlock\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, getLocalesCode), __jsx(\"button\", {\n    onClick: handleGetLocales,\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, buttonLabel), localesByGetLocales.length > 0 && __jsx(_components_Collapsible__WEBPACK_IMPORTED_MODULE_7__[\"Collapsible\"], {\n    open: displayGetLocalesResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, localesByGetLocales.map(function (locale, index) {\n    return __jsx(_components_Result__WEBPACK_IMPORTED_MODULE_6__[\"Result\"], {\n      index: index,\n      locale: locale,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 26\n      }\n    });\n  }))), __jsx(\"div\", {\n    className: \"jsx-3162003166\" + \" \" + \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, \"getLocaleByIETFLanguageTag\"), __jsx(\"h4\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }, \"You can get a single locale by language tag by providing a single language tag...\"), __jsx(\"input\", {\n    placeholder: defaultSingleLocaleByLanguageTagQuery,\n    value: singleLocaleByLanguageTagQuery,\n    onChange: function onChange(event) {\n      return setSingleLocaleByLanguageTagQuery(event.target.value);\n    },\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }), __jsx(_components_Separator__WEBPACK_IMPORTED_MODULE_8__[\"Separator\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }), __jsx(_components_CodeBlock__WEBPACK_IMPORTED_MODULE_4__[\"CodeBlock\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }, singleLocaleByLanguageTagCode), __jsx(\"button\", {\n    onClick: handleSingleLocaleByLanguageTag,\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, buttonLabel), singleLocaleByLanguageTag && __jsx(_components_Collapsible__WEBPACK_IMPORTED_MODULE_7__[\"Collapsible\"], {\n    open: displaySingleLocaleByLanguageTagResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 15\n    }\n  }, __jsx(_components_Result__WEBPACK_IMPORTED_MODULE_6__[\"Result\"], {\n    locale: singleLocaleByLanguageTag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  })), __jsx(_components_Separator__WEBPACK_IMPORTED_MODULE_8__[\"Separator\"], {\n    thick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }), __jsx(\"h4\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, \"Or you can get multiple by providing multiple language tags!\"), __jsx(\"input\", {\n    placeholder: defaultMultipleLocalesByLanguageTagQuery.join(\",\"),\n    value: multipleLocalesByLanguageTagQuery.join(),\n    onChange: function onChange(event) {\n      return setMultipleLocalesByLanguageTagQuery(event.target.value.split(\",\"));\n    },\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }), __jsx(_components_Separator__WEBPACK_IMPORTED_MODULE_8__[\"Separator\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }), __jsx(_components_CodeBlock__WEBPACK_IMPORTED_MODULE_4__[\"CodeBlock\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, multipleLocalesCode), __jsx(\"button\", {\n    onClick: handleMultipleLocalesByLanguageTag,\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, buttonLabel), multipleLocalesByLanguageTag.length > 0 && __jsx(_components_Collapsible__WEBPACK_IMPORTED_MODULE_7__[\"Collapsible\"], {\n    open: displayMultipleLocalesByLanguageTagResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, multipleLocalesByLanguageTag.map(function (locale, index) {\n    return __jsx(_components_Result__WEBPACK_IMPORTED_MODULE_6__[\"Result\"], {\n      index: index,\n      locale: locale,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 26\n      }\n    });\n  }))))), __jsx(\"footer\", {\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/marcelovicentegc/i18n-iso-languages\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"jsx-3162003166\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }\n  }, \"Brought to you with \\u2764\\uFE0F by Marcelo Cardoso\")), __jsx(react_toastify__WEBPACK_IMPORTED_MODULE_9__[\"ToastContainer\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"3432118021\",\n    __self: this\n  }, \".container.jsx-3162003166{min-height:100vh;padding:0 0.5rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}main.jsx-3162003166{padding:5rem 0;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}footer.jsx-3162003166{width:100%;height:100px;border-top:1px solid #eaeaea;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}footer.jsx-3162003166 img.jsx-3162003166{margin-left:0.5rem;}footer.jsx-3162003166 a.jsx-3162003166{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}a.jsx-3162003166{color:inherit;-webkit-text-decoration:none;text-decoration:none;}.title.jsx-3162003166 a.jsx-3162003166{color:#0070f3;-webkit-text-decoration:none;text-decoration:none;}.title.jsx-3162003166 a.jsx-3162003166:hover,.title.jsx-3162003166 a.jsx-3162003166:focus,.title.jsx-3162003166 a.jsx-3162003166:active{-webkit-text-decoration:underline;text-decoration:underline;}.title.jsx-3162003166{margin:0;line-height:1.15;font-size:4rem;}.title.jsx-3162003166,.description.jsx-3162003166{text-align:center;}.description.jsx-3162003166{line-height:1.5;font-size:1.5rem;}.grid.jsx-3162003166{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;max-width:1260px;margin-top:3rem;}.codeBlockContainer.jsx-3162003166{max-width:calc(100vw - 2.5rem);}.card.jsx-3162003166{margin:1rem;-webkit-flex-basis:30%;-ms-flex-preferred-size:30%;flex-basis:30%;max-width:800px;padding:1.5rem;text-align:left;color:inherit;-webkit-text-decoration:none;text-decoration:none;border:1px solid #eaeaea;border-radius:10px;-webkit-transition:color 0.15s ease,border-color 0.15s ease;transition:color 0.15s ease,border-color 0.15s ease;}.card.jsx-3162003166 input.jsx-3162003166{padding:0.5rem;height:38px;border-radius:4px;border:0.5px solid hsl(0,0%,80%);width:100%;font-size:16px;-webkit-transition:all 100ms;transition:all 100ms;color:hsl(0,0%,20%);}.card.jsx-3162003166 input.jsx-3162003166:focus{outline:none;border:1px solid #2684ff;box-shadow:0 0 0 1px #2684ff;}.card.jsx-3162003166 button.jsx-3162003166{padding:0.5rem;border-radius:4px;background-color:#fff;border:0.5px solid hsl(0,0%,80%);color:hsl(0,0%,20%);cursor:pointer;-webkit-transition:all 100ms;transition:all 100ms;}.card.jsx-3162003166 button.jsx-3162003166:focus,.card.jsx-3162003166 button.jsx-3162003166:hover{outline:none;border:1px solid var(--blue);box-shadow:0 0 0 1px var(--blue);}.card.jsx-3162003166 button.jsx-3162003166:active{outline:none;border:1px solid var(--blue);box-shadow:0 0 0 1px var(--blue);background-color:var(--blue);color:#fff;}.card.jsx-3162003166 h3.jsx-3162003166{margin:0 0 1rem 0;font-size:1.5rem;}.card.jsx-3162003166 p.jsx-3162003166{margin:0;font-size:1.25rem;line-height:1.5;}.logo.jsx-3162003166{height:1em;}@media (max-width:600px){.grid.jsx-3162003166{width:calc(100vw - 2.5rem);-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.card.jsx-3162003166{width:calc(100% - 1.5rem);}.title.jsx-3162003166{font-size:3rem;}.description.jsx-3162003166{font-size:1rem;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/home/marcelo/Documents/i18n-language-codes/demo/pages/index.tsx */\"), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    id: \"1712543154\",\n    __self: this\n  }, \"html,body{--scrollbarBG:#fff;--thumbBG:#000;--blue:#2684ff;-webkit-scrollbar-width:thin;-moz-scrollbar-width:thin;-ms-scrollbar-width:thin;scrollbar-width:thin;-webkit-scrollbar-color:var(--thumbBG) var(--scrollbarBG);-moz-scrollbar-color:var(--thumbBG) var(--scrollbarBG);-ms-scrollbar-color:var(--thumbBG) var(--scrollbarBG);scrollbar-color:var(--thumbBG) var(--scrollbarBG);padding:0;margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto, Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue, sans-serif;}*{box-sizing:border-box;}html::-webkit-scrollbar-thumb{background-color:var(--thumbBG);border-radius:6px;border:3px solid var(--scrollbarBG);}html::-webkit-scrollbar-track{background:var(--scrollbarBG);}html::-webkit-scrollbar{width:11px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/home/marcelo/Documents/i18n-language-codes/demo/pages/index.tsx */\"));\n}\n\n_s(Home, \"xofUOXHtOwg4+cqG29xzrNQKVLA=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ })

})